diff --git a/src/kern/.include.swp b/src/kern/.include.swp
new file mode 100644
index 0000000..e4b28b2
Binary files /dev/null and b/src/kern/.include.swp differ
diff --git a/src/kern/asst1/catsem.c b/src/kern/asst1/catsem.c
index dcb257b..145985e 100644
--- a/src/kern/asst1/catsem.c
+++ b/src/kern/asst1/catsem.c
@@ -18,7 +18,7 @@
 #include <lib.h>
 #include <test.h>
 #include <thread.h>
-
+#include <synch.h>
 
 /*
  * 
@@ -36,13 +36,13 @@
  * Number of cats.
  */
 
-#define NCATS 6
+#define NCATS 30
 
 /*
  * Number of mice.
  */
 
-#define NMICE 2
+#define NMICE 20
 
 
 /*
@@ -66,18 +66,61 @@
  *      Write and comment this function using semaphores.
  *
  */
+// six cat processes are going to try to enter catsem, WOO
+static struct semaphore* catSemaphore = NULL;
+static struct semaphore* miceSemaphore = NULL;
+static struct semaphore* mouseWaiting = NULL;
+static struct semaphore* blockCat = NULL;
+static struct semaphore* catMouseExclusive = NULL;
+static struct semaphore* catMutex=NULL;
+static struct semaphore* miceMutex=NULL;
+static struct semaphore* dish=NULL;
+static struct semaphore* printfMutex=NULL;
+int i = 1;
+int j = 1;
+int catNum = 0;
+int miceNum = 0;
+static void catsem(void * unusedpointer, unsigned long catnumber) {
 
-static
-void
-catsem(void * unusedpointer, 
-       unsigned long catnumber)
-{
-        /*
-         * Avoid unused variable warnings.
-         */
+	while(i > 0){
+		P(blockCat);
+		P(catMutex);
+			
+			catNum++;
+			
+			if(catNum == 1){
+				P(catMouseExclusive);	
+				P(printfMutex);
+				kprintf("first cat came in, and is now trying to obtain cat mouse exclusive lock \n\n");
+				V(printfMutex);
 
-        (void) unusedpointer;
-        (void) catnumber;
+			}
+		V(catMutex);
+		V(blockCat);
+		P(dish);
+		
+		P(printfMutex);
+		kprintf("cat number %d eating \n", catnumber);
+		V(printfMutex);
+		
+		clocksleep(1);	
+	
+		V(dish);
+        
+	        P(catMutex);
+			P(printfMutex);
+			kprintf("cat %d leaving\n\n", catnumber);
+			V(printfMutex);
+			catNum--;
+            if(catNum == 0){
+                    V(catMouseExclusive);
+            }
+            V(catMutex);		
+		i--;	
+	} 
+
+	(void) unusedpointer;
+	(void) catnumber;
 }
         
 
@@ -102,6 +145,46 @@ void
 mousesem(void * unusedpointer, 
          unsigned long mousenumber)
 {
+				
+				
+        while(j > 0){
+                P(miceMutex);
+                        miceNum++;
+			if(miceNum == 1){
+				P(blockCat);
+				P(catMouseExclusive);
+				P(printfMutex);
+                kprintf("mouse got exclusive lock it, squeak squeak! \n");
+                V(printfMutex);
+			}
+                V(miceMutex);
+
+		/**** EATING ***/
+                P(dish);
+                	/* Output status */
+			P(printfMutex);
+			kprintf("mice number %d eating\n", mousenumber);
+                	V(printfMutex);
+			/* Eating */
+			clocksleep(1);
+                
+		/**** SIGNAL DONE EATING ****/		
+		V(dish);
+		
+
+		P(miceMutex);
+			miceNum--;	
+			P(printfMutex);
+			kprintf("mouse number %d leaving \n", mousenumber);
+			V(printfMutex);
+			
+			if(miceNum == 0){
+				V(blockCat);
+				V(catMouseExclusive);
+			}
+		V(miceMutex);
+		j--;
+        }
         /*
          * Avoid unused variable warnings.
          */
@@ -128,16 +211,27 @@ mousesem(void * unusedpointer,
 
 int
 catmousesem(int nargs,
-            char ** args)
+             char ** args)
 {
         int index, error;
-   
+        if(catSemaphore == NULL){
+          catSemaphore=sem_create("catSemaphore", NCATS);
+        }
+       if(miceSemaphore == NULL){
+          miceSemaphore=sem_create("miceSemaphore", NCATS);
+        }
+	catMutex = sem_create("catMutex", 1);
+	miceMutex = sem_create("miceMutex", 1);   
+	dish = sem_create("dish", 2);
+	catMouseExclusive = sem_create("catMouseExclusive", 1);
+	printfMutex = sem_create("printfMutex", 1);
+	mouseWaiting = sem_create("mouseWaiting", 1);
+	blockCat = sem_create("blockCat", 1);
         /*
          * Avoid unused variable warnings.
          */
-
-        (void) nargs;
-        (void) args;
+	(void) nargs;
+	(void) args;
    
         /*
          * Start NCATS catsem() threads.
diff --git a/src/kern/asst1/exercises.txt b/src/kern/asst1/exercises.txt
new file mode 100644
index 0000000..f8a8b7c
--- /dev/null
+++ b/src/kern/asst1/exercises.txt
@@ -0,0 +1,23 @@
+1) 
+
+Our catsem.c implementation avoids starvation by providing a lock called
+CatBlock, once the first mouse comes into wait on a dish, it blocks the cat so
+that it doesn't continue to get the exclusive lock for either a cat or mouse.
+Effectively this means that if a mouse is waiting, it will get priority over a
+cat waiting for a dish. This is slightly less performant, because if a cat and
+mouse are waiting, and one cat finishes, the other cat cant go in and eat because
+there is a mouse waiting. therefore it is less efficient utilization of
+resources. However this approach avoids the mouse starving, which is
+preferrential.
+
+Our catlock implementation uses the same approach except with condition
+variables/locks. the lock mechanism will check and see if the lock is free.
+if its not, it will put the current thread to sleep until it is woken up by 
+the lock_release method. The lock release method will wake up the thread
+sleeping on the address of the lock. once it wakes up it will resume execution
+of where it was put to sleep. We use condition variables to signal and wait on
+these various conditions.
+
+2) I would say that the condition variables implementation is simpler, but the
+semaphore based solution is a little more straightforward. 
+
diff --git a/src/kern/compile/ASST0/Makefile b/src/kern/compile/ASST0/Makefile
deleted file mode 100644
index 266ee72..0000000
--- a/src/kern/compile/ASST0/Makefile
+++ /dev/null
@@ -1,197 +0,0 @@
-# Automatically generated by config.
-# Edit arch/mips/conf/Makefile.mips instead, and rerun config.
-#
-
-#
-#
-# Makefile.mips
-#
-# OS/161 kernel makefile base for the MIPS r2000/r3000.
-#
-# The actual makefiles used are copies of this file - if you want to edit,
-# edit kern/arch/mips/conf/Makefile.mips and rerun config.
-#
-
-
-#
-# Filename for the kernel.
-#
-KERNEL=kernel
-
-#
-# Get the defs that were dumped out from the kernel config tool.
-# This defines:
-#	S		Path for top of kernel source tree
-#	ARCH		Architecture ("mips")
-#	DEBUGFLAGS	-O2 or -g
-#	CONFNAME	The name of the kernel config, e.g., ASST1
-#
-include defs.mk
-
-#
-# Get the tree-wide defs.
-# This defines (that we use):
-#	OSTREE		Path for top of installed system tree
-#	CC		C compiler
-#	KCFLAGS		C compiler flags for kernel
-#	LD		Linker
-#	KLDFLAGS	Linker flags for kernel
-#	SIZE		Object file size tool
-#
-include $S/../defs.mk
-
-#
-# Adjust defs for building the kernel.
-#
-# The LOAD_ADDRESS is the virtual address where the kernel will be loaded
-# into memory. This is in the direct-mapped cached segment of the MIPS
-# address space. -Ttext is the linker option for setting it.
-#
-# -T provides the linker with a "linker script". This is a piece of
-# obscure mumble that tells the linker how to put together the output
-# program. The only reason we need it is that the linker breaks if you
-# try to use -Ttext and its default built-in linker script at the same
-# time.
-#
-# -nostdinc prevents including header files other than our own, and 
-# -nostdlib prevents linking against any standard libraries. Because
-# the kernel has to be a completely standalone program, this is important.
-#
-# -ffreestanding tells gcc this is not an ordinary program, so it will
-# make fewer unwise assumptions about standard library functions.
-#
-# We define _KERNEL so certain source files that are shared between the
-# kernel and userland (like strcpy.c) can tell the difference so they know
-# which header files to use.
-#
-# -G 0 tells the assembler and linker not to reference global variables
-# via the "global pointer" (MIPS gp register) because we don't support 
-# handling the gp register.
-#
-LOAD_ADDRESS=0x80001000
-INCLUDES=-nostdinc -I$S/include -I$S/dev -I. 
-CFLAGS=$(KCFLAGS) $(DEBUGFLAGS) $(INCLUDES) -ffreestanding -D_KERNEL -G 0
-LDFLAGS=$(KLDFLAGS) -nostdlib \
-	-Ttext $(LOAD_ADDRESS) -T $S/arch/mips/conf/ldscript \
-	-G 0
-
-#
-# Rules for compiling various kinds of source files, by suffix.
-# (There's nothing magical about these names and make.)
-#
-# We don't actually use C++ in OS/161, although, with some fiddling,
-# you might be able to. But you must turn off exceptions and RTTI in
-# order to do so (the implementations of these in gcc are completely 
-# unsuitable for kernels.)
-#
-COMPILE.cc=$(CC) $(CFLAGS) -fno-rtti -fno-exceptions -c
-COMPILE.c=$(CC) $(CFLAGS) -c
-COMPILE.l=false   # redefine when needed 
-COMPILE.y=false   # redefine when needed 
-COMPILE.S=$(CC) $(CFLAGS) -c
-
-#
-# This should expand to all the header files in the kernel so they can
-# be fed to tags.
-#
-TAGS_HEADERS=$S/include/*.h $S/include/kern/*.h $S/arch/$(ARCH)/include/*.h
-
-#
-# Default make rule: build the kernel.
-#
-all: $(KERNEL)
-
-#
-# Here's how we link the kernel. 
-#
-# vers.c/.o is generated on every build. It contains a numeric serial
-# number incremented every time newvers.sh is run.  These values are
-# printed out by newvers.sh and are also displayed at boot time. This
-# makes it possible to tell at a glance whether you're actually
-# running the same kernel you just compiled.
-#
-# The version number is kept in the file called "version" in the build
-# directory.
-#
-# By immemorial tradition, "size" is run on the kernel after it's linked.
-#
-$(KERNEL):
-	$S/conf/newvers.sh $(CONFNAME)
-	$(COMPILE.c) vers.c
-	$(LD) $(LDFLAGS) $(OBJS) vers.o -o $(KERNEL)
-	$(SIZE) $(KERNEL)
-
-#
-# Use the -M argument to gcc to get it to output dependency information.
-# Note that we use -M, which includes deps for #include <...> files,
-# rather than -MM, which doesn't. This is because we are the operating
-# system: the #include <...> files are part of our project - in fact, in
-# the kernel they're the kernel's own include files - and they will be
-# changing!
-#
-depend:
-	$(CC) $(CFLAGS) -M $(SRCS) > depend.mk
-
-#
-# Remove everything generated during the compile.
-# (To remove absolutely everything automatically generated, you can just
-# blow away the whole compile directory.)
-#
-clean:
-	rm -f *.o *.a tags $(KERNEL)
-
-#
-# Rerun config for this configuration.
-#
-reconfig:
-	(cd ../../conf && ./config $(CONFNAME))
-
-#
-# [ -d $(OSTREE) ] succeeds if $(OSTREE) is a directory.
-# (See test(1).) Thus, if $(OSTREE) doesn't exist, it will be created.
-#
-
-# The kernel gets installed at the top of the installed system tree.
-# Since with OS/161 it's relatively likely that you'll be working with
-# several configurations at once, it gets installed under the name of
-# this config, and a symbolic link with the "real" name is set up to
-# point to the last kernel installed.
-#
-install:
-	[ -d $(OSTREE) ] || mkdir $(OSTREE)
-	cp $(KERNEL) $(OSTREE)/$(KERNEL)-$(CONFNAME)
-	-rm -f $(OSTREE)/$(KERNEL)
-	ln -s $(KERNEL)-$(CONFNAME) $(OSTREE)/$(KERNEL)
-
-#
-# Run tags on all the sources and header files. This is probably not
-# the most useful way to do this and needs attention. (XXX)
-#
-tags:
-	ctags -wtd $(SRCS) $(TAGS_HEADERS)
-
-#
-# This tells make that these rules are not files so it (hopefully)
-# won't become confused if files by those names appear.
-#
-.PHONY: all depend clean install tags reconfig
-
-#
-# Get the list of source files from where it was generated by the 
-# kernel config tool.
-#
-# This sets SRCS and OBJS, and also defines a rule for compiling each
-# source file.
-#
-include files.mk
-
-# Get dependency information.
-include depend.mk
-
-#
-# Tell make that the kernel depends on the object files listed in $(OBJS).
-# This (unlike the link commands that also use $(OBJS) above) must come
-# after the include of files.mk, because of the way make reads its input
-# and evaluates variables.
-#
-$(KERNEL): $(OBJS)
diff --git a/src/kern/compile/ASST0/__printf.o b/src/kern/compile/ASST0/__printf.o
deleted file mode 100644
index db5885b..0000000
Binary files a/src/kern/compile/ASST0/__printf.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/array.o b/src/kern/compile/ASST0/array.o
deleted file mode 100644
index 7f02897..0000000
Binary files a/src/kern/compile/ASST0/array.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/arraytest.o b/src/kern/compile/ASST0/arraytest.o
deleted file mode 100644
index 1353db6..0000000
Binary files a/src/kern/compile/ASST0/arraytest.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/atoi.o b/src/kern/compile/ASST0/atoi.o
deleted file mode 100644
index cdf74cf..0000000
Binary files a/src/kern/compile/ASST0/atoi.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/autoconf.c b/src/kern/compile/ASST0/autoconf.c
deleted file mode 100644
index 59a323e..0000000
--- a/src/kern/compile/ASST0/autoconf.c
+++ /dev/null
@@ -1,455 +0,0 @@
-/* Automatically generated; do not edit */
-#include <types.h>
-#include <lib.h>
-#include "autoconf.h"
-
-static void autoconf_beep(struct beep_softc *, int);
-static void autoconf_con(struct con_softc *, int);
-static void autoconf_emu(struct emu_softc *, int);
-static void autoconf_lhd(struct lhd_softc *, int);
-static void autoconf_lrandom(struct lrandom_softc *, int);
-static void autoconf_lser(struct lser_softc *, int);
-static void autoconf_ltimer(struct ltimer_softc *, int);
-static void autoconf_ltrace(struct ltrace_softc *, int);
-static void autoconf_pseudorand(struct pseudorand_softc *, int);
-static void autoconf_random(struct random_softc *, int);
-static void autoconf_rtclock(struct rtclock_softc *, int);
-static int nextunit_beep;
-static int nextunit_con;
-static int nextunit_emu;
-static int nextunit_lhd;
-static int nextunit_lrandom;
-static int nextunit_lser;
-static int nextunit_ltimer;
-static int nextunit_ltrace;
-static int nextunit_random;
-static int nextunit_rtclock;
-
-static
-int
-tryattach_emu_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
-{
-	struct emu_softc *dev;
-	int result;
-
-	dev = attach_emu_to_lamebus(devunit, bus);
-	if (dev==NULL) {
-		return -1;
-	}
-	kprintf("emu%d at lamebus%d", devunit, busunit);
-	result = config_emu(dev, devunit);
-	if (result != 0) {
-		kprintf(": %s\n", strerror(result));
-		/* should really clean up dev */
-		return result;
-	}
-	kprintf("\n");
-	nextunit_emu = devunit+1;
-	autoconf_emu(dev, devunit);
-	return 0;
-}
-
-static
-int
-tryattach_ltrace_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
-{
-	struct ltrace_softc *dev;
-	int result;
-
-	dev = attach_ltrace_to_lamebus(devunit, bus);
-	if (dev==NULL) {
-		return -1;
-	}
-	kprintf("ltrace%d at lamebus%d", devunit, busunit);
-	result = config_ltrace(dev, devunit);
-	if (result != 0) {
-		kprintf(": %s\n", strerror(result));
-		/* should really clean up dev */
-		return result;
-	}
-	kprintf("\n");
-	nextunit_ltrace = devunit+1;
-	autoconf_ltrace(dev, devunit);
-	return 0;
-}
-
-static
-int
-tryattach_ltimer_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
-{
-	struct ltimer_softc *dev;
-	int result;
-
-	dev = attach_ltimer_to_lamebus(devunit, bus);
-	if (dev==NULL) {
-		return -1;
-	}
-	kprintf("ltimer%d at lamebus%d", devunit, busunit);
-	result = config_ltimer(dev, devunit);
-	if (result != 0) {
-		kprintf(": %s\n", strerror(result));
-		/* should really clean up dev */
-		return result;
-	}
-	kprintf("\n");
-	nextunit_ltimer = devunit+1;
-	autoconf_ltimer(dev, devunit);
-	return 0;
-}
-
-static
-int
-tryattach_lrandom_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
-{
-	struct lrandom_softc *dev;
-	int result;
-
-	dev = attach_lrandom_to_lamebus(devunit, bus);
-	if (dev==NULL) {
-		return -1;
-	}
-	kprintf("lrandom%d at lamebus%d", devunit, busunit);
-	result = config_lrandom(dev, devunit);
-	if (result != 0) {
-		kprintf(": %s\n", strerror(result));
-		/* should really clean up dev */
-		return result;
-	}
-	kprintf("\n");
-	nextunit_lrandom = devunit+1;
-	autoconf_lrandom(dev, devunit);
-	return 0;
-}
-
-static
-int
-tryattach_lhd_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
-{
-	struct lhd_softc *dev;
-	int result;
-
-	dev = attach_lhd_to_lamebus(devunit, bus);
-	if (dev==NULL) {
-		return -1;
-	}
-	kprintf("lhd%d at lamebus%d", devunit, busunit);
-	result = config_lhd(dev, devunit);
-	if (result != 0) {
-		kprintf(": %s\n", strerror(result));
-		/* should really clean up dev */
-		return result;
-	}
-	kprintf("\n");
-	nextunit_lhd = devunit+1;
-	autoconf_lhd(dev, devunit);
-	return 0;
-}
-
-static
-int
-tryattach_lser_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
-{
-	struct lser_softc *dev;
-	int result;
-
-	dev = attach_lser_to_lamebus(devunit, bus);
-	if (dev==NULL) {
-		return -1;
-	}
-	kprintf("lser%d at lamebus%d", devunit, busunit);
-	result = config_lser(dev, devunit);
-	if (result != 0) {
-		kprintf(": %s\n", strerror(result));
-		/* should really clean up dev */
-		return result;
-	}
-	kprintf("\n");
-	nextunit_lser = devunit+1;
-	autoconf_lser(dev, devunit);
-	return 0;
-}
-
-static
-int
-tryattach_beep_to_ltimer(int devunit, struct ltimer_softc *bus, int busunit)
-{
-	struct beep_softc *dev;
-	int result;
-
-	dev = attach_beep_to_ltimer(devunit, bus);
-	if (dev==NULL) {
-		return -1;
-	}
-	kprintf("beep%d at ltimer%d", devunit, busunit);
-	result = config_beep(dev, devunit);
-	if (result != 0) {
-		kprintf(": %s\n", strerror(result));
-		/* should really clean up dev */
-		return result;
-	}
-	kprintf("\n");
-	nextunit_beep = devunit+1;
-	autoconf_beep(dev, devunit);
-	return 0;
-}
-
-static
-int
-tryattach_con_to_lser(int devunit, struct lser_softc *bus, int busunit)
-{
-	struct con_softc *dev;
-	int result;
-
-	dev = attach_con_to_lser(devunit, bus);
-	if (dev==NULL) {
-		return -1;
-	}
-	kprintf("con%d at lser%d", devunit, busunit);
-	result = config_con(dev, devunit);
-	if (result != 0) {
-		kprintf(": %s\n", strerror(result));
-		/* should really clean up dev */
-		return result;
-	}
-	kprintf("\n");
-	nextunit_con = devunit+1;
-	autoconf_con(dev, devunit);
-	return 0;
-}
-
-static
-int
-tryattach_rtclock_to_ltimer(int devunit, struct ltimer_softc *bus, int busunit)
-{
-	struct rtclock_softc *dev;
-	int result;
-
-	dev = attach_rtclock_to_ltimer(devunit, bus);
-	if (dev==NULL) {
-		return -1;
-	}
-	kprintf("rtclock%d at ltimer%d", devunit, busunit);
-	result = config_rtclock(dev, devunit);
-	if (result != 0) {
-		kprintf(": %s\n", strerror(result));
-		/* should really clean up dev */
-		return result;
-	}
-	kprintf("\n");
-	nextunit_rtclock = devunit+1;
-	autoconf_rtclock(dev, devunit);
-	return 0;
-}
-
-static
-int
-tryattach_random_to_lrandom(int devunit, struct lrandom_softc *bus, int busunit)
-{
-	struct random_softc *dev;
-	int result;
-
-	dev = attach_random_to_lrandom(devunit, bus);
-	if (dev==NULL) {
-		return -1;
-	}
-	kprintf("random%d at lrandom%d", devunit, busunit);
-	result = config_random(dev, devunit);
-	if (result != 0) {
-		kprintf(": %s\n", strerror(result));
-		/* should really clean up dev */
-		return result;
-	}
-	kprintf("\n");
-	nextunit_random = devunit+1;
-	autoconf_random(dev, devunit);
-	return 0;
-}
-
-static
-int
-tryattach_random_to_pseudorand(int devunit, struct pseudorand_softc *bus, int busunit)
-{
-	struct random_softc *dev;
-	int result;
-
-	dev = attach_random_to_pseudorand(devunit, bus);
-	if (dev==NULL) {
-		return -1;
-	}
-	kprintf("random%d at pseudorand%d", devunit, busunit);
-	result = config_random(dev, devunit);
-	if (result != 0) {
-		kprintf(": %s\n", strerror(result));
-		/* should really clean up dev */
-		return result;
-	}
-	kprintf("\n");
-	nextunit_random = devunit+1;
-	autoconf_random(dev, devunit);
-	return 0;
-}
-
-
-static
-void
-autoconf_lhd(struct lhd_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-}
-
-static
-void
-autoconf_random(struct random_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-}
-
-static
-void
-autoconf_rtclock(struct rtclock_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-}
-
-static
-void
-autoconf_emu(struct emu_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-}
-
-void
-autoconf_pseudorand(struct pseudorand_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-	if (busunit==0) {
-		if (nextunit_random <= 0) {
-			tryattach_random_to_pseudorand(0, bus, busunit);
-		}
-	}
-}
-
-static
-void
-autoconf_ltrace(struct ltrace_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-}
-
-static
-void
-autoconf_con(struct con_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-}
-
-void
-autoconf_lamebus(struct lamebus_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-	{
-		int result, devunit=nextunit_emu;
-		do {
-			result = tryattach_emu_to_lamebus(devunit, bus, busunit);
-			devunit++;
-		} while (result==0);
-	}
-	{
-		int result, devunit=nextunit_ltrace;
-		do {
-			result = tryattach_ltrace_to_lamebus(devunit, bus, busunit);
-			devunit++;
-		} while (result==0);
-	}
-	{
-		int result, devunit=nextunit_ltimer;
-		do {
-			result = tryattach_ltimer_to_lamebus(devunit, bus, busunit);
-			devunit++;
-		} while (result==0);
-	}
-	{
-		int result, devunit=nextunit_lrandom;
-		do {
-			result = tryattach_lrandom_to_lamebus(devunit, bus, busunit);
-			devunit++;
-		} while (result==0);
-	}
-	{
-		int result, devunit=nextunit_lhd;
-		do {
-			result = tryattach_lhd_to_lamebus(devunit, bus, busunit);
-			devunit++;
-		} while (result==0);
-	}
-	{
-		int result, devunit=nextunit_lser;
-		do {
-			result = tryattach_lser_to_lamebus(devunit, bus, busunit);
-			devunit++;
-		} while (result==0);
-	}
-}
-
-static
-void
-autoconf_beep(struct beep_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-}
-
-static
-void
-autoconf_lser(struct lser_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-	{
-		if (nextunit_con <= 0) {
-			tryattach_con_to_lser(0, bus, busunit);
-		}
-	}
-}
-
-static
-void
-autoconf_lrandom(struct lrandom_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-	{
-		if (nextunit_random <= 0) {
-			tryattach_random_to_lrandom(0, bus, busunit);
-		}
-	}
-}
-
-static
-void
-autoconf_ltimer(struct ltimer_softc *bus, int busunit)
-{
-	(void)bus; (void)busunit;
-	{
-		if (nextunit_beep <= 0) {
-			tryattach_beep_to_ltimer(0, bus, busunit);
-		}
-	}
-	{
-		if (nextunit_rtclock <= 0) {
-			tryattach_rtclock_to_ltimer(0, bus, busunit);
-		}
-	}
-}
-
-void
-pseudoconfig(void)
-{
-	{
-		struct pseudorand_softc *s;
-		
-		s = pseudoattach_pseudorand(0);
-		if (s!=NULL) {
-			kprintf("pseudorand0 (virtual)\n");
-			autoconf_pseudorand(s, 0);
-		}
-	}
-}
-
diff --git a/src/kern/compile/ASST0/autoconf.h b/src/kern/compile/ASST0/autoconf.h
deleted file mode 100644
index 13ab76c..0000000
--- a/src/kern/compile/ASST0/autoconf.h
+++ /dev/null
@@ -1,48 +0,0 @@
-/* Automatically generated; do not edit */
-#ifndef _AUTOCONF_H_
-#define _AUTOCONF_H_
-
-struct lamebus_softc;
-struct emu_softc;
-struct ltrace_softc;
-struct ltimer_softc;
-struct lrandom_softc;
-struct lhd_softc;
-struct lser_softc;
-struct beep_softc;
-struct con_softc;
-struct rtclock_softc;
-struct random_softc;
-struct pseudorand_softc;
-struct random_softc;
-
-void autoconf_lamebus(struct lamebus_softc *dev, int unit);
-
-struct emu_softc *attach_emu_to_lamebus(int devunit, struct lamebus_softc *bus);
-struct ltrace_softc *attach_ltrace_to_lamebus(int devunit, struct lamebus_softc *bus);
-struct ltimer_softc *attach_ltimer_to_lamebus(int devunit, struct lamebus_softc *bus);
-struct lrandom_softc *attach_lrandom_to_lamebus(int devunit, struct lamebus_softc *bus);
-struct lhd_softc *attach_lhd_to_lamebus(int devunit, struct lamebus_softc *bus);
-struct lser_softc *attach_lser_to_lamebus(int devunit, struct lamebus_softc *bus);
-struct beep_softc *attach_beep_to_ltimer(int devunit, struct ltimer_softc *bus);
-struct con_softc *attach_con_to_lser(int devunit, struct lser_softc *bus);
-struct rtclock_softc *attach_rtclock_to_ltimer(int devunit, struct ltimer_softc *bus);
-struct random_softc *attach_random_to_lrandom(int devunit, struct lrandom_softc *bus);
-struct pseudorand_softc *pseudoattach_pseudorand(int devunit);
-struct random_softc *attach_random_to_pseudorand(int devunit, struct pseudorand_softc *bus);
-
-int config_emu(struct emu_softc *dev, int unit);
-int config_ltrace(struct ltrace_softc *dev, int unit);
-int config_ltimer(struct ltimer_softc *dev, int unit);
-int config_lrandom(struct lrandom_softc *dev, int unit);
-int config_lhd(struct lhd_softc *dev, int unit);
-int config_lser(struct lser_softc *dev, int unit);
-int config_beep(struct beep_softc *dev, int unit);
-int config_con(struct con_softc *dev, int unit);
-int config_rtclock(struct rtclock_softc *dev, int unit);
-int config_random(struct random_softc *dev, int unit);
-int config_random(struct random_softc *dev, int unit);
-
-void pseudoconfig(void);
-
-#endif /* _AUTOCONF_H_ */
diff --git a/src/kern/compile/ASST0/autoconf.o b/src/kern/compile/ASST0/autoconf.o
deleted file mode 100644
index aea4d41..0000000
Binary files a/src/kern/compile/ASST0/autoconf.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/beep.o b/src/kern/compile/ASST0/beep.o
deleted file mode 100644
index 5e5eac2..0000000
Binary files a/src/kern/compile/ASST0/beep.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/beep_ltimer.o b/src/kern/compile/ASST0/beep_ltimer.o
deleted file mode 100644
index 3b482cc..0000000
Binary files a/src/kern/compile/ASST0/beep_ltimer.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/bitmap.o b/src/kern/compile/ASST0/bitmap.o
deleted file mode 100644
index 682c389..0000000
Binary files a/src/kern/compile/ASST0/bitmap.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/bitmaptest.o b/src/kern/compile/ASST0/bitmaptest.o
deleted file mode 100644
index 56e645b..0000000
Binary files a/src/kern/compile/ASST0/bitmaptest.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/bzero.o b/src/kern/compile/ASST0/bzero.o
deleted file mode 100644
index 90f10b2..0000000
Binary files a/src/kern/compile/ASST0/bzero.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/cache_mips1.o b/src/kern/compile/ASST0/cache_mips1.o
deleted file mode 100644
index 17b4113..0000000
Binary files a/src/kern/compile/ASST0/cache_mips1.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/con_lser.o b/src/kern/compile/ASST0/con_lser.o
deleted file mode 100644
index 484b740..0000000
Binary files a/src/kern/compile/ASST0/con_lser.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/console.o b/src/kern/compile/ASST0/console.o
deleted file mode 100644
index 371f559..0000000
Binary files a/src/kern/compile/ASST0/console.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/copyinout.o b/src/kern/compile/ASST0/copyinout.o
deleted file mode 100644
index d40f4cf..0000000
Binary files a/src/kern/compile/ASST0/copyinout.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/defs.mk b/src/kern/compile/ASST0/defs.mk
deleted file mode 100644
index f5433a3..0000000
--- a/src/kern/compile/ASST0/defs.mk
+++ /dev/null
@@ -1,5 +0,0 @@
-# Automatically generated by config; do not edit
-S=../..
-ARCH=mips
-DEBUGFLAGS=-g
-CONFNAME=ASST0
diff --git a/src/kern/compile/ASST0/depend.mk b/src/kern/compile/ASST0/depend.mk
deleted file mode 100644
index d18a4cc..0000000
--- a/src/kern/compile/ASST0/depend.mk
+++ /dev/null
@@ -1,348 +0,0 @@
-lhd.o: ../../dev/lamebus/lhd.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/synch.h ../../include/kern/errno.h machine/bus.h \
-  machine/vm.h ../../dev/lamebus/lamebus.h ../../include/uio.h \
-  ../../include/vfs.h ../../dev/lamebus/lhd.h ../../include/dev.h \
-  autoconf.h
-emu.o: ../../dev/lamebus/emu.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/kern/unistd.h ../../include/kern/stat.h \
-  ../../include/lib.h machine/setjmp.h ../../include/synch.h \
-  ../../include/array.h ../../include/uio.h ../../include/vfs.h \
-  ../../include/emufs.h ../../include/vnode.h ../../include/fs.h \
-  ../../dev/lamebus/emu.h machine/bus.h machine/vm.h \
-  ../../dev/lamebus/lamebus.h autoconf.h
-random.o: ../../dev/generic/random.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/kern/unistd.h ../../include/lib.h machine/setjmp.h \
-  ../../include/uio.h ../../include/vfs.h ../../dev/generic/random.h \
-  ../../include/dev.h autoconf.h
-rtclock.o: ../../dev/generic/rtclock.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h ../../include/clock.h \
-  opt-synchprobs.h ../../dev/generic/rtclock.h autoconf.h
-pseudorand.o: ../../dev/generic/pseudorand.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../include/uio.h ../../dev/generic/pseudorand.h \
-  autoconf.h
-ltrace.o: ../../dev/lamebus/ltrace.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h machine/bus.h machine/vm.h ../../dev/lamebus/lamebus.h \
-  ../../dev/lamebus/ltrace.h autoconf.h
-lamebus.o: ../../dev/lamebus/lamebus.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h machine/spl.h ../../dev/lamebus/lamebus.h
-console.o: ../../dev/generic/console.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h machine/spl.h \
-  ../../include/synch.h ../../dev/generic/console.h ../../include/dev.h \
-  ../../include/vfs.h ../../include/uio.h autoconf.h
-lser.o: ../../dev/lamebus/lser.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  machine/spl.h machine/bus.h machine/vm.h ../../dev/lamebus/lamebus.h \
-  ../../dev/lamebus/lser.h autoconf.h
-beep.o: ../../dev/generic/beep.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h ../../dev/generic/beep.h \
-  autoconf.h
-lrandom.o: ../../dev/lamebus/lrandom.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../include/uio.h machine/bus.h machine/vm.h \
-  ../../dev/lamebus/lamebus.h ../../dev/lamebus/lrandom.h autoconf.h
-ltimer.o: ../../dev/lamebus/ltimer.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../include/clock.h opt-synchprobs.h machine/bus.h \
-  machine/vm.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/ltimer.h \
-  autoconf.h
-rtclock_ltimer.o: ../../dev/lamebus/rtclock_ltimer.c \
-  ../../include/types.h machine/types.h ../../include/kern/types.h \
-  ../../include/lib.h machine/setjmp.h ../../dev/generic/rtclock.h \
-  ../../dev/lamebus/ltimer.h autoconf.h
-emu_att.o: ../../dev/lamebus/emu_att.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/emu.h \
-  autoconf.h
-random_lrandom.o: ../../dev/lamebus/random_lrandom.c \
-  ../../include/types.h machine/types.h ../../include/kern/types.h \
-  ../../include/lib.h machine/setjmp.h ../../dev/generic/random.h \
-  ../../include/dev.h ../../dev/lamebus/lrandom.h autoconf.h
-beep_ltimer.o: ../../dev/lamebus/beep_ltimer.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../dev/generic/beep.h ../../dev/lamebus/ltimer.h \
-  autoconf.h
-ltrace_att.o: ../../dev/lamebus/ltrace_att.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/ltrace.h \
-  autoconf.h
-pseudorand_att.o: ../../dev/generic/pseudorand_att.c \
-  ../../include/types.h machine/types.h ../../include/kern/types.h \
-  ../../include/lib.h machine/setjmp.h ../../dev/generic/random.h \
-  ../../include/dev.h ../../dev/generic/pseudorand.h autoconf.h
-con_lser.o: ../../dev/lamebus/con_lser.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../dev/generic/console.h ../../dev/lamebus/lser.h \
-  autoconf.h
-lrandom_att.o: ../../dev/lamebus/lrandom_att.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../dev/lamebus/lamebus.h \
-  ../../dev/lamebus/lrandom.h autoconf.h
-lser_att.o: ../../dev/lamebus/lser_att.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/lser.h \
-  autoconf.h
-lhd_att.o: ../../dev/lamebus/lhd_att.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/lhd.h \
-  ../../include/dev.h autoconf.h
-ltimer_att.o: ../../dev/lamebus/ltimer_att.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/ltimer.h \
-  autoconf.h
-sfs_io.o: ../../fs/sfs/sfs_io.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h ../../include/uio.h \
-  ../../include/sfs.h ../../include/vnode.h ../../include/fs.h \
-  ../../include/kern/sfs.h ../../include/dev.h
-sfs_fs.o: ../../fs/sfs/sfs_fs.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/kern/errno.h ../../include/array.h ../../include/bitmap.h \
-  ../../include/uio.h ../../include/dev.h ../../include/sfs.h \
-  ../../include/vnode.h ../../include/fs.h ../../include/kern/sfs.h \
-  ../../include/vfs.h
-sfs_vnode.o: ../../fs/sfs/sfs_vnode.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../include/synch.h ../../include/array.h \
-  ../../include/bitmap.h ../../include/kern/stat.h \
-  ../../include/kern/errno.h ../../include/kern/unistd.h \
-  ../../include/uio.h ../../include/dev.h ../../include/sfs.h \
-  ../../include/vnode.h ../../include/fs.h ../../include/kern/sfs.h
-dumbvm.o: ../../arch/mips/mips/dumbvm.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h ../../include/thread.h \
-  machine/pcb.h ../../include/curthread.h ../../include/addrspace.h \
-  ../../include/vm.h machine/vm.h opt-dumbvm.h machine/spl.h \
-  machine/tlb.h
-cache_mips1.o: ../../arch/mips/mips/cache_mips1.S machine/asmdefs.h
-exception.o: ../../arch/mips/mips/exception.S machine/asmdefs.h \
-  machine/specialreg.h
-lamebus_mips.o: ../../arch/mips/mips/lamebus_mips.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/kern/unistd.h \
-  ../../include/lib.h machine/setjmp.h ../../include/synch.h \
-  machine/spl.h machine/pcb.h ../../include/dev.h machine/bus.h \
-  machine/vm.h ../../dev/lamebus/lamebus.h autoconf.h
-interrupt.o: ../../arch/mips/mips/interrupt.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h machine/bus.h machine/vm.h ../../dev/lamebus/lamebus.h \
-  machine/spl.h machine/pcb.h
-pcb.o: ../../arch/mips/mips/pcb.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  machine/pcb.h machine/spl.h machine/switchframe.h \
-  ../../include/thread.h
-ram.o: ../../arch/mips/mips/ram.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/vm.h machine/vm.h machine/pcb.h
-spl.o: ../../arch/mips/mips/spl.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  machine/spl.h machine/specialreg.h
-start.o: ../../arch/mips/mips/start.S machine/asmdefs.h \
-  machine/specialreg.h
-switch.o: ../../arch/mips/mips/switch.S machine/asmdefs.h
-syscall.o: ../../arch/mips/mips/syscall.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h machine/pcb.h machine/spl.h \
-  machine/trapframe.h ../../include/kern/callno.h ../../include/syscall.h
-threadstart.o: ../../arch/mips/mips/threadstart.S machine/asmdefs.h
-trap.o: ../../arch/mips/mips/trap.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  machine/trapframe.h machine/specialreg.h machine/pcb.h machine/spl.h \
-  ../../include/vm.h machine/vm.h ../../include/thread.h \
-  ../../include/curthread.h
-tlb_mips1.o: ../../arch/mips/mips/tlb_mips1.S machine/asmdefs.h \
-  machine/specialreg.h
-mips-setjmp.o: ../../../lib/libc/mips-setjmp.S machine/asmdefs.h
-copyinout.o: ../../lib/copyinout.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h machine/pcb.h ../../include/vm.h \
-  machine/vm.h ../../include/thread.h ../../include/curthread.h
-array.o: ../../lib/array.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h ../../include/array.h
-bitmap.o: ../../lib/bitmap.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/kern/errno.h ../../include/bitmap.h
-queue.o: ../../lib/queue.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h ../../include/queue.h
-kheap.o: ../../lib/kheap.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/vm.h machine/vm.h machine/spl.h
-kprintf.o: ../../lib/kprintf.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/stdarg.h ../../include/lib.h \
-  machine/setjmp.h ../../include/kern/unistd.h ../../include/synch.h \
-  ../../include/vfs.h ../../include/thread.h machine/pcb.h machine/spl.h
-kgets.o: ../../lib/kgets.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h
-misc.o: ../../lib/misc.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errmsg.h \
-  ../../include/lib.h machine/setjmp.h
-ntoh.o: ../../lib/ntoh.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h
-__printf.o: ../../../lib/libc/__printf.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../include/stdarg.h
-snprintf.o: ../../../lib/libc/snprintf.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../include/stdarg.h
-atoi.o: ../../../lib/libc/atoi.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h
-bzero.o: ../../../lib/libc/bzero.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h
-memcpy.o: ../../../lib/libc/memcpy.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h
-memmove.o: ../../../lib/libc/memmove.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h
-strcat.o: ../../../lib/libc/strcat.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h
-strchr.o: ../../../lib/libc/strchr.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h
-strcmp.o: ../../../lib/libc/strcmp.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h
-strcpy.o: ../../../lib/libc/strcpy.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h
-strlen.o: ../../../lib/libc/strlen.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h
-strrchr.o: ../../../lib/libc/strrchr.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h
-strtok_r.o: ../../../lib/libc/strtok_r.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h
-init.o: ../../dev/init.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  machine/spl.h ../../include/dev.h autoconf.h
-device.o: ../../fs/vfs/device.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/synch.h ../../include/kern/errno.h \
-  ../../include/kern/unistd.h ../../include/kern/stat.h \
-  ../../include/vnode.h ../../include/uio.h ../../include/dev.h
-vfscwd.o: ../../fs/vfs/vfscwd.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/synch.h ../../include/kern/errno.h \
-  ../../include/kern/stat.h ../../include/vfs.h ../../include/fs.h \
-  ../../include/vnode.h ../../include/uio.h ../../include/thread.h \
-  machine/pcb.h ../../include/curthread.h
-vfslist.o: ../../fs/vfs/vfslist.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/synch.h ../../include/array.h ../../include/kern/errno.h \
-  ../../include/vfs.h ../../include/vnode.h ../../include/fs.h \
-  ../../include/dev.h
-vfslookup.o: ../../fs/vfs/vfslookup.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/kern/limits.h ../../include/lib.h machine/setjmp.h \
-  ../../include/synch.h ../../include/vfs.h ../../include/vnode.h \
-  ../../include/fs.h
-vfspath.o: ../../fs/vfs/vfspath.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/kern/limits.h ../../include/kern/unistd.h \
-  ../../include/vfs.h ../../include/vnode.h ../../include/lib.h \
-  machine/setjmp.h
-vnode.o: ../../fs/vfs/vnode.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h ../../include/synch.h \
-  ../../include/vnode.h
-devnull.o: ../../fs/vfs/devnull.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h ../../include/vfs.h \
-  ../../include/dev.h ../../include/uio.h
-hardclock.o: ../../thread/hardclock.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h machine/spl.h ../../include/thread.h machine/pcb.h \
-  ../../include/clock.h opt-synchprobs.h
-synch.o: ../../thread/synch.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/synch.h ../../include/thread.h machine/pcb.h \
-  ../../include/curthread.h machine/spl.h
-scheduler.o: ../../thread/scheduler.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../include/scheduler.h ../../include/thread.h \
-  machine/pcb.h machine/spl.h ../../include/queue.h
-thread.o: ../../thread/thread.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/kern/errno.h ../../include/array.h machine/spl.h \
-  machine/pcb.h ../../include/thread.h ../../include/curthread.h \
-  ../../include/scheduler.h ../../include/addrspace.h ../../include/vm.h \
-  machine/vm.h opt-dumbvm.h ../../include/vnode.h opt-synchprobs.h
-main.o: ../../main/main.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/kern/unistd.h ../../include/lib.h machine/setjmp.h \
-  machine/spl.h ../../include/test.h ../../include/synch.h \
-  ../../include/thread.h machine/pcb.h ../../include/scheduler.h \
-  ../../include/dev.h ../../include/vfs.h ../../include/vm.h machine/vm.h \
-  ../../include/syscall.h ../../include/version.h
-menu.o: ../../main/menu.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/kern/unistd.h ../../include/kern/limits.h \
-  ../../include/lib.h machine/setjmp.h ../../include/clock.h \
-  opt-synchprobs.h ../../include/thread.h machine/pcb.h \
-  ../../include/syscall.h ../../include/uio.h ../../include/vfs.h \
-  ../../include/sfs.h ../../include/vnode.h ../../include/fs.h \
-  ../../include/kern/sfs.h ../../include/test.h opt-synchprobs.h \
-  opt-sfs.h opt-net.h
-hello.o: ../../main/hello.c
-loadelf.o: ../../userprog/loadelf.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/lib.h machine/setjmp.h ../../include/uio.h \
-  ../../include/elf.h ../../include/addrspace.h ../../include/vm.h \
-  machine/vm.h opt-dumbvm.h ../../include/thread.h machine/pcb.h \
-  ../../include/curthread.h ../../include/vnode.h
-runprogram.o: ../../userprog/runprogram.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/kern/unistd.h \
-  ../../include/kern/errno.h ../../include/lib.h machine/setjmp.h \
-  ../../include/addrspace.h ../../include/vm.h machine/vm.h opt-dumbvm.h \
-  ../../include/thread.h machine/pcb.h ../../include/curthread.h \
-  ../../include/vfs.h ../../include/test.h
-uio.o: ../../userprog/uio.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/uio.h ../../include/thread.h machine/pcb.h \
-  ../../include/curthread.h
-arraytest.o: ../../test/arraytest.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/array.h ../../include/test.h
-bitmaptest.o: ../../test/bitmaptest.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../include/bitmap.h ../../include/test.h
-queuetest.o: ../../test/queuetest.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/queue.h ../../include/test.h
-threadtest.o: ../../test/threadtest.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../include/synch.h ../../include/thread.h \
-  machine/pcb.h ../../include/test.h
-tt3.o: ../../test/tt3.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  machine/spl.h ../../include/synch.h ../../include/thread.h \
-  machine/pcb.h ../../include/test.h opt-synchprobs.h
-synchtest.o: ../../test/synchtest.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
-  ../../include/synch.h ../../include/thread.h machine/pcb.h \
-  ../../include/test.h ../../include/clock.h opt-synchprobs.h
-malloctest.o: ../../test/malloctest.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../include/synch.h ../../include/thread.h \
-  machine/pcb.h ../../include/test.h
-fstest.o: ../../test/fstest.c ../../include/types.h machine/types.h \
-  ../../include/kern/types.h ../../include/kern/errno.h \
-  ../../include/kern/unistd.h ../../include/lib.h machine/setjmp.h \
-  ../../include/synch.h ../../include/fs.h ../../include/vnode.h \
-  ../../include/vfs.h ../../include/uio.h ../../include/test.h \
-  ../../include/thread.h machine/pcb.h
-autoconf.o: ../../compile/ASST0/autoconf.c ../../include/types.h \
-  machine/types.h ../../include/kern/types.h ../../include/lib.h \
-  machine/setjmp.h ../../compile/ASST0/autoconf.h
diff --git a/src/kern/compile/ASST0/device.o b/src/kern/compile/ASST0/device.o
deleted file mode 100644
index 37a5007..0000000
Binary files a/src/kern/compile/ASST0/device.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/devnull.o b/src/kern/compile/ASST0/devnull.o
deleted file mode 100644
index cf34d78..0000000
Binary files a/src/kern/compile/ASST0/devnull.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/dumbvm.o b/src/kern/compile/ASST0/dumbvm.o
deleted file mode 100644
index 9b00ba9..0000000
Binary files a/src/kern/compile/ASST0/dumbvm.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/emu.o b/src/kern/compile/ASST0/emu.o
deleted file mode 100644
index 99adc39..0000000
Binary files a/src/kern/compile/ASST0/emu.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/emu_att.o b/src/kern/compile/ASST0/emu_att.o
deleted file mode 100644
index 5a2facc..0000000
Binary files a/src/kern/compile/ASST0/emu_att.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/exception.o b/src/kern/compile/ASST0/exception.o
deleted file mode 100644
index 907ef10..0000000
Binary files a/src/kern/compile/ASST0/exception.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/files.mk b/src/kern/compile/ASST0/files.mk
deleted file mode 100644
index 16311ad..0000000
--- a/src/kern/compile/ASST0/files.mk
+++ /dev/null
@@ -1,451 +0,0 @@
-# Automatically generated by config; do not edit
-lhd.o: ${S}/dev/lamebus/lhd.c
-	${COMPILE.c} ${S}/dev/lamebus/lhd.c
-SRCS+=${S}/dev/lamebus/lhd.c
-OBJS+=lhd.o
-
-emu.o: ${S}/dev/lamebus/emu.c
-	${COMPILE.c} ${S}/dev/lamebus/emu.c
-SRCS+=${S}/dev/lamebus/emu.c
-OBJS+=emu.o
-
-random.o: ${S}/dev/generic/random.c
-	${COMPILE.c} ${S}/dev/generic/random.c
-SRCS+=${S}/dev/generic/random.c
-OBJS+=random.o
-
-rtclock.o: ${S}/dev/generic/rtclock.c
-	${COMPILE.c} ${S}/dev/generic/rtclock.c
-SRCS+=${S}/dev/generic/rtclock.c
-OBJS+=rtclock.o
-
-pseudorand.o: ${S}/dev/generic/pseudorand.c
-	${COMPILE.c} ${S}/dev/generic/pseudorand.c
-SRCS+=${S}/dev/generic/pseudorand.c
-OBJS+=pseudorand.o
-
-ltrace.o: ${S}/dev/lamebus/ltrace.c
-	${COMPILE.c} ${S}/dev/lamebus/ltrace.c
-SRCS+=${S}/dev/lamebus/ltrace.c
-OBJS+=ltrace.o
-
-lamebus.o: ${S}/dev/lamebus/lamebus.c
-	${COMPILE.c} ${S}/dev/lamebus/lamebus.c
-SRCS+=${S}/dev/lamebus/lamebus.c
-OBJS+=lamebus.o
-
-console.o: ${S}/dev/generic/console.c
-	${COMPILE.c} ${S}/dev/generic/console.c
-SRCS+=${S}/dev/generic/console.c
-OBJS+=console.o
-
-lser.o: ${S}/dev/lamebus/lser.c
-	${COMPILE.c} ${S}/dev/lamebus/lser.c
-SRCS+=${S}/dev/lamebus/lser.c
-OBJS+=lser.o
-
-beep.o: ${S}/dev/generic/beep.c
-	${COMPILE.c} ${S}/dev/generic/beep.c
-SRCS+=${S}/dev/generic/beep.c
-OBJS+=beep.o
-
-lrandom.o: ${S}/dev/lamebus/lrandom.c
-	${COMPILE.c} ${S}/dev/lamebus/lrandom.c
-SRCS+=${S}/dev/lamebus/lrandom.c
-OBJS+=lrandom.o
-
-ltimer.o: ${S}/dev/lamebus/ltimer.c
-	${COMPILE.c} ${S}/dev/lamebus/ltimer.c
-SRCS+=${S}/dev/lamebus/ltimer.c
-OBJS+=ltimer.o
-
-rtclock_ltimer.o: ${S}/dev/lamebus/rtclock_ltimer.c
-	${COMPILE.c} ${S}/dev/lamebus/rtclock_ltimer.c
-SRCS+=${S}/dev/lamebus/rtclock_ltimer.c
-OBJS+=rtclock_ltimer.o
-
-emu_att.o: ${S}/dev/lamebus/emu_att.c
-	${COMPILE.c} ${S}/dev/lamebus/emu_att.c
-SRCS+=${S}/dev/lamebus/emu_att.c
-OBJS+=emu_att.o
-
-random_lrandom.o: ${S}/dev/lamebus/random_lrandom.c
-	${COMPILE.c} ${S}/dev/lamebus/random_lrandom.c
-SRCS+=${S}/dev/lamebus/random_lrandom.c
-OBJS+=random_lrandom.o
-
-beep_ltimer.o: ${S}/dev/lamebus/beep_ltimer.c
-	${COMPILE.c} ${S}/dev/lamebus/beep_ltimer.c
-SRCS+=${S}/dev/lamebus/beep_ltimer.c
-OBJS+=beep_ltimer.o
-
-ltrace_att.o: ${S}/dev/lamebus/ltrace_att.c
-	${COMPILE.c} ${S}/dev/lamebus/ltrace_att.c
-SRCS+=${S}/dev/lamebus/ltrace_att.c
-OBJS+=ltrace_att.o
-
-pseudorand_att.o: ${S}/dev/generic/pseudorand_att.c
-	${COMPILE.c} ${S}/dev/generic/pseudorand_att.c
-SRCS+=${S}/dev/generic/pseudorand_att.c
-OBJS+=pseudorand_att.o
-
-con_lser.o: ${S}/dev/lamebus/con_lser.c
-	${COMPILE.c} ${S}/dev/lamebus/con_lser.c
-SRCS+=${S}/dev/lamebus/con_lser.c
-OBJS+=con_lser.o
-
-lrandom_att.o: ${S}/dev/lamebus/lrandom_att.c
-	${COMPILE.c} ${S}/dev/lamebus/lrandom_att.c
-SRCS+=${S}/dev/lamebus/lrandom_att.c
-OBJS+=lrandom_att.o
-
-lser_att.o: ${S}/dev/lamebus/lser_att.c
-	${COMPILE.c} ${S}/dev/lamebus/lser_att.c
-SRCS+=${S}/dev/lamebus/lser_att.c
-OBJS+=lser_att.o
-
-lhd_att.o: ${S}/dev/lamebus/lhd_att.c
-	${COMPILE.c} ${S}/dev/lamebus/lhd_att.c
-SRCS+=${S}/dev/lamebus/lhd_att.c
-OBJS+=lhd_att.o
-
-ltimer_att.o: ${S}/dev/lamebus/ltimer_att.c
-	${COMPILE.c} ${S}/dev/lamebus/ltimer_att.c
-SRCS+=${S}/dev/lamebus/ltimer_att.c
-OBJS+=ltimer_att.o
-
-sfs_io.o: ${S}/fs/sfs/sfs_io.c
-	${COMPILE.c} ${S}/fs/sfs/sfs_io.c
-SRCS+=${S}/fs/sfs/sfs_io.c
-OBJS+=sfs_io.o
-
-sfs_fs.o: ${S}/fs/sfs/sfs_fs.c
-	${COMPILE.c} ${S}/fs/sfs/sfs_fs.c
-SRCS+=${S}/fs/sfs/sfs_fs.c
-OBJS+=sfs_fs.o
-
-sfs_vnode.o: ${S}/fs/sfs/sfs_vnode.c
-	${COMPILE.c} ${S}/fs/sfs/sfs_vnode.c
-SRCS+=${S}/fs/sfs/sfs_vnode.c
-OBJS+=sfs_vnode.o
-
-dumbvm.o: ${S}/arch/mips/mips/dumbvm.c
-	${COMPILE.c} ${S}/arch/mips/mips/dumbvm.c
-SRCS+=${S}/arch/mips/mips/dumbvm.c
-OBJS+=dumbvm.o
-
-cache_mips1.o: ${S}/arch/mips/mips/cache_mips1.S
-	${COMPILE.S} ${S}/arch/mips/mips/cache_mips1.S
-SRCS+=${S}/arch/mips/mips/cache_mips1.S
-OBJS+=cache_mips1.o
-
-exception.o: ${S}/arch/mips/mips/exception.S
-	${COMPILE.S} ${S}/arch/mips/mips/exception.S
-SRCS+=${S}/arch/mips/mips/exception.S
-OBJS+=exception.o
-
-lamebus_mips.o: ${S}/arch/mips/mips/lamebus_mips.c
-	${COMPILE.c} ${S}/arch/mips/mips/lamebus_mips.c
-SRCS+=${S}/arch/mips/mips/lamebus_mips.c
-OBJS+=lamebus_mips.o
-
-interrupt.o: ${S}/arch/mips/mips/interrupt.c
-	${COMPILE.c} ${S}/arch/mips/mips/interrupt.c
-SRCS+=${S}/arch/mips/mips/interrupt.c
-OBJS+=interrupt.o
-
-pcb.o: ${S}/arch/mips/mips/pcb.c
-	${COMPILE.c} ${S}/arch/mips/mips/pcb.c
-SRCS+=${S}/arch/mips/mips/pcb.c
-OBJS+=pcb.o
-
-ram.o: ${S}/arch/mips/mips/ram.c
-	${COMPILE.c} ${S}/arch/mips/mips/ram.c
-SRCS+=${S}/arch/mips/mips/ram.c
-OBJS+=ram.o
-
-spl.o: ${S}/arch/mips/mips/spl.c
-	${COMPILE.c} ${S}/arch/mips/mips/spl.c
-SRCS+=${S}/arch/mips/mips/spl.c
-OBJS+=spl.o
-
-start.o: ${S}/arch/mips/mips/start.S
-	${COMPILE.S} ${S}/arch/mips/mips/start.S
-SRCS+=${S}/arch/mips/mips/start.S
-OBJS+=start.o
-
-switch.o: ${S}/arch/mips/mips/switch.S
-	${COMPILE.S} ${S}/arch/mips/mips/switch.S
-SRCS+=${S}/arch/mips/mips/switch.S
-OBJS+=switch.o
-
-syscall.o: ${S}/arch/mips/mips/syscall.c
-	${COMPILE.c} ${S}/arch/mips/mips/syscall.c
-SRCS+=${S}/arch/mips/mips/syscall.c
-OBJS+=syscall.o
-
-threadstart.o: ${S}/arch/mips/mips/threadstart.S
-	${COMPILE.S} ${S}/arch/mips/mips/threadstart.S
-SRCS+=${S}/arch/mips/mips/threadstart.S
-OBJS+=threadstart.o
-
-trap.o: ${S}/arch/mips/mips/trap.c
-	${COMPILE.c} ${S}/arch/mips/mips/trap.c
-SRCS+=${S}/arch/mips/mips/trap.c
-OBJS+=trap.o
-
-tlb_mips1.o: ${S}/arch/mips/mips/tlb_mips1.S
-	${COMPILE.S} ${S}/arch/mips/mips/tlb_mips1.S
-SRCS+=${S}/arch/mips/mips/tlb_mips1.S
-OBJS+=tlb_mips1.o
-
-mips-setjmp.o: ${S}/../lib/libc/mips-setjmp.S
-	${COMPILE.S} ${S}/../lib/libc/mips-setjmp.S
-SRCS+=${S}/../lib/libc/mips-setjmp.S
-OBJS+=mips-setjmp.o
-
-copyinout.o: ${S}/lib/copyinout.c
-	${COMPILE.c} ${S}/lib/copyinout.c
-SRCS+=${S}/lib/copyinout.c
-OBJS+=copyinout.o
-
-array.o: ${S}/lib/array.c
-	${COMPILE.c} ${S}/lib/array.c
-SRCS+=${S}/lib/array.c
-OBJS+=array.o
-
-bitmap.o: ${S}/lib/bitmap.c
-	${COMPILE.c} ${S}/lib/bitmap.c
-SRCS+=${S}/lib/bitmap.c
-OBJS+=bitmap.o
-
-queue.o: ${S}/lib/queue.c
-	${COMPILE.c} ${S}/lib/queue.c
-SRCS+=${S}/lib/queue.c
-OBJS+=queue.o
-
-kheap.o: ${S}/lib/kheap.c
-	${COMPILE.c} ${S}/lib/kheap.c
-SRCS+=${S}/lib/kheap.c
-OBJS+=kheap.o
-
-kprintf.o: ${S}/lib/kprintf.c
-	${COMPILE.c} ${S}/lib/kprintf.c
-SRCS+=${S}/lib/kprintf.c
-OBJS+=kprintf.o
-
-kgets.o: ${S}/lib/kgets.c
-	${COMPILE.c} ${S}/lib/kgets.c
-SRCS+=${S}/lib/kgets.c
-OBJS+=kgets.o
-
-misc.o: ${S}/lib/misc.c
-	${COMPILE.c} ${S}/lib/misc.c
-SRCS+=${S}/lib/misc.c
-OBJS+=misc.o
-
-ntoh.o: ${S}/lib/ntoh.c
-	${COMPILE.c} ${S}/lib/ntoh.c
-SRCS+=${S}/lib/ntoh.c
-OBJS+=ntoh.o
-
-__printf.o: ${S}/../lib/libc/__printf.c
-	${COMPILE.c} ${S}/../lib/libc/__printf.c
-SRCS+=${S}/../lib/libc/__printf.c
-OBJS+=__printf.o
-
-snprintf.o: ${S}/../lib/libc/snprintf.c
-	${COMPILE.c} ${S}/../lib/libc/snprintf.c
-SRCS+=${S}/../lib/libc/snprintf.c
-OBJS+=snprintf.o
-
-atoi.o: ${S}/../lib/libc/atoi.c
-	${COMPILE.c} ${S}/../lib/libc/atoi.c
-SRCS+=${S}/../lib/libc/atoi.c
-OBJS+=atoi.o
-
-bzero.o: ${S}/../lib/libc/bzero.c
-	${COMPILE.c} ${S}/../lib/libc/bzero.c
-SRCS+=${S}/../lib/libc/bzero.c
-OBJS+=bzero.o
-
-memcpy.o: ${S}/../lib/libc/memcpy.c
-	${COMPILE.c} ${S}/../lib/libc/memcpy.c
-SRCS+=${S}/../lib/libc/memcpy.c
-OBJS+=memcpy.o
-
-memmove.o: ${S}/../lib/libc/memmove.c
-	${COMPILE.c} ${S}/../lib/libc/memmove.c
-SRCS+=${S}/../lib/libc/memmove.c
-OBJS+=memmove.o
-
-strcat.o: ${S}/../lib/libc/strcat.c
-	${COMPILE.c} ${S}/../lib/libc/strcat.c
-SRCS+=${S}/../lib/libc/strcat.c
-OBJS+=strcat.o
-
-strchr.o: ${S}/../lib/libc/strchr.c
-	${COMPILE.c} ${S}/../lib/libc/strchr.c
-SRCS+=${S}/../lib/libc/strchr.c
-OBJS+=strchr.o
-
-strcmp.o: ${S}/../lib/libc/strcmp.c
-	${COMPILE.c} ${S}/../lib/libc/strcmp.c
-SRCS+=${S}/../lib/libc/strcmp.c
-OBJS+=strcmp.o
-
-strcpy.o: ${S}/../lib/libc/strcpy.c
-	${COMPILE.c} ${S}/../lib/libc/strcpy.c
-SRCS+=${S}/../lib/libc/strcpy.c
-OBJS+=strcpy.o
-
-strlen.o: ${S}/../lib/libc/strlen.c
-	${COMPILE.c} ${S}/../lib/libc/strlen.c
-SRCS+=${S}/../lib/libc/strlen.c
-OBJS+=strlen.o
-
-strrchr.o: ${S}/../lib/libc/strrchr.c
-	${COMPILE.c} ${S}/../lib/libc/strrchr.c
-SRCS+=${S}/../lib/libc/strrchr.c
-OBJS+=strrchr.o
-
-strtok_r.o: ${S}/../lib/libc/strtok_r.c
-	${COMPILE.c} ${S}/../lib/libc/strtok_r.c
-SRCS+=${S}/../lib/libc/strtok_r.c
-OBJS+=strtok_r.o
-
-init.o: ${S}/dev/init.c
-	${COMPILE.c} ${S}/dev/init.c
-SRCS+=${S}/dev/init.c
-OBJS+=init.o
-
-device.o: ${S}/fs/vfs/device.c
-	${COMPILE.c} ${S}/fs/vfs/device.c
-SRCS+=${S}/fs/vfs/device.c
-OBJS+=device.o
-
-vfscwd.o: ${S}/fs/vfs/vfscwd.c
-	${COMPILE.c} ${S}/fs/vfs/vfscwd.c
-SRCS+=${S}/fs/vfs/vfscwd.c
-OBJS+=vfscwd.o
-
-vfslist.o: ${S}/fs/vfs/vfslist.c
-	${COMPILE.c} ${S}/fs/vfs/vfslist.c
-SRCS+=${S}/fs/vfs/vfslist.c
-OBJS+=vfslist.o
-
-vfslookup.o: ${S}/fs/vfs/vfslookup.c
-	${COMPILE.c} ${S}/fs/vfs/vfslookup.c
-SRCS+=${S}/fs/vfs/vfslookup.c
-OBJS+=vfslookup.o
-
-vfspath.o: ${S}/fs/vfs/vfspath.c
-	${COMPILE.c} ${S}/fs/vfs/vfspath.c
-SRCS+=${S}/fs/vfs/vfspath.c
-OBJS+=vfspath.o
-
-vnode.o: ${S}/fs/vfs/vnode.c
-	${COMPILE.c} ${S}/fs/vfs/vnode.c
-SRCS+=${S}/fs/vfs/vnode.c
-OBJS+=vnode.o
-
-devnull.o: ${S}/fs/vfs/devnull.c
-	${COMPILE.c} ${S}/fs/vfs/devnull.c
-SRCS+=${S}/fs/vfs/devnull.c
-OBJS+=devnull.o
-
-hardclock.o: ${S}/thread/hardclock.c
-	${COMPILE.c} ${S}/thread/hardclock.c
-SRCS+=${S}/thread/hardclock.c
-OBJS+=hardclock.o
-
-synch.o: ${S}/thread/synch.c
-	${COMPILE.c} ${S}/thread/synch.c
-SRCS+=${S}/thread/synch.c
-OBJS+=synch.o
-
-scheduler.o: ${S}/thread/scheduler.c
-	${COMPILE.c} ${S}/thread/scheduler.c
-SRCS+=${S}/thread/scheduler.c
-OBJS+=scheduler.o
-
-thread.o: ${S}/thread/thread.c
-	${COMPILE.c} ${S}/thread/thread.c
-SRCS+=${S}/thread/thread.c
-OBJS+=thread.o
-
-main.o: ${S}/main/main.c
-	${COMPILE.c} ${S}/main/main.c
-SRCS+=${S}/main/main.c
-OBJS+=main.o
-
-menu.o: ${S}/main/menu.c
-	${COMPILE.c} ${S}/main/menu.c
-SRCS+=${S}/main/menu.c
-OBJS+=menu.o
-
-hello.o: ${S}/main/hello.c
-	${COMPILE.c} ${S}/main/hello.c
-SRCS+=${S}/main/hello.c
-OBJS+=hello.o
-
-loadelf.o: ${S}/userprog/loadelf.c
-	${COMPILE.c} ${S}/userprog/loadelf.c
-SRCS+=${S}/userprog/loadelf.c
-OBJS+=loadelf.o
-
-runprogram.o: ${S}/userprog/runprogram.c
-	${COMPILE.c} ${S}/userprog/runprogram.c
-SRCS+=${S}/userprog/runprogram.c
-OBJS+=runprogram.o
-
-uio.o: ${S}/userprog/uio.c
-	${COMPILE.c} ${S}/userprog/uio.c
-SRCS+=${S}/userprog/uio.c
-OBJS+=uio.o
-
-arraytest.o: ${S}/test/arraytest.c
-	${COMPILE.c} ${S}/test/arraytest.c
-SRCS+=${S}/test/arraytest.c
-OBJS+=arraytest.o
-
-bitmaptest.o: ${S}/test/bitmaptest.c
-	${COMPILE.c} ${S}/test/bitmaptest.c
-SRCS+=${S}/test/bitmaptest.c
-OBJS+=bitmaptest.o
-
-queuetest.o: ${S}/test/queuetest.c
-	${COMPILE.c} ${S}/test/queuetest.c
-SRCS+=${S}/test/queuetest.c
-OBJS+=queuetest.o
-
-threadtest.o: ${S}/test/threadtest.c
-	${COMPILE.c} ${S}/test/threadtest.c
-SRCS+=${S}/test/threadtest.c
-OBJS+=threadtest.o
-
-tt3.o: ${S}/test/tt3.c
-	${COMPILE.c} ${S}/test/tt3.c
-SRCS+=${S}/test/tt3.c
-OBJS+=tt3.o
-
-synchtest.o: ${S}/test/synchtest.c
-	${COMPILE.c} ${S}/test/synchtest.c
-SRCS+=${S}/test/synchtest.c
-OBJS+=synchtest.o
-
-malloctest.o: ${S}/test/malloctest.c
-	${COMPILE.c} ${S}/test/malloctest.c
-SRCS+=${S}/test/malloctest.c
-OBJS+=malloctest.o
-
-fstest.o: ${S}/test/fstest.c
-	${COMPILE.c} ${S}/test/fstest.c
-SRCS+=${S}/test/fstest.c
-OBJS+=fstest.o
-
-autoconf.o: ${S}/compile/ASST0/autoconf.c
-	${COMPILE.c} ${S}/compile/ASST0/autoconf.c
-SRCS+=${S}/compile/ASST0/autoconf.c
-OBJS+=autoconf.o
-
diff --git a/src/kern/compile/ASST0/fstest.o b/src/kern/compile/ASST0/fstest.o
deleted file mode 100644
index 7282f2b..0000000
Binary files a/src/kern/compile/ASST0/fstest.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/hardclock.o b/src/kern/compile/ASST0/hardclock.o
deleted file mode 100644
index c7f77e6..0000000
Binary files a/src/kern/compile/ASST0/hardclock.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/hello.o b/src/kern/compile/ASST0/hello.o
deleted file mode 100644
index b8325f2..0000000
Binary files a/src/kern/compile/ASST0/hello.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/init.o b/src/kern/compile/ASST0/init.o
deleted file mode 100644
index f431f94..0000000
Binary files a/src/kern/compile/ASST0/init.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/interrupt.o b/src/kern/compile/ASST0/interrupt.o
deleted file mode 100644
index e4ac468..0000000
Binary files a/src/kern/compile/ASST0/interrupt.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/kernel b/src/kern/compile/ASST0/kernel
deleted file mode 100755
index 503ebfc..0000000
Binary files a/src/kern/compile/ASST0/kernel and /dev/null differ
diff --git a/src/kern/compile/ASST0/kgets.o b/src/kern/compile/ASST0/kgets.o
deleted file mode 100644
index b41a14c..0000000
Binary files a/src/kern/compile/ASST0/kgets.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/kheap.o b/src/kern/compile/ASST0/kheap.o
deleted file mode 100644
index db2a451..0000000
Binary files a/src/kern/compile/ASST0/kheap.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/kprintf.o b/src/kern/compile/ASST0/kprintf.o
deleted file mode 100644
index e52ed3b..0000000
Binary files a/src/kern/compile/ASST0/kprintf.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/lamebus.o b/src/kern/compile/ASST0/lamebus.o
deleted file mode 100644
index 23c7d15..0000000
Binary files a/src/kern/compile/ASST0/lamebus.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/lamebus_mips.o b/src/kern/compile/ASST0/lamebus_mips.o
deleted file mode 100644
index 93f324b..0000000
Binary files a/src/kern/compile/ASST0/lamebus_mips.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/lhd.o b/src/kern/compile/ASST0/lhd.o
deleted file mode 100644
index ef9562c..0000000
Binary files a/src/kern/compile/ASST0/lhd.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/lhd_att.o b/src/kern/compile/ASST0/lhd_att.o
deleted file mode 100644
index c63ed95..0000000
Binary files a/src/kern/compile/ASST0/lhd_att.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/loadelf.o b/src/kern/compile/ASST0/loadelf.o
deleted file mode 100644
index 89f042e..0000000
Binary files a/src/kern/compile/ASST0/loadelf.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/lrandom.o b/src/kern/compile/ASST0/lrandom.o
deleted file mode 100644
index 064db17..0000000
Binary files a/src/kern/compile/ASST0/lrandom.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/lrandom_att.o b/src/kern/compile/ASST0/lrandom_att.o
deleted file mode 100644
index 4c09ece..0000000
Binary files a/src/kern/compile/ASST0/lrandom_att.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/lser.o b/src/kern/compile/ASST0/lser.o
deleted file mode 100644
index d338546..0000000
Binary files a/src/kern/compile/ASST0/lser.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/lser_att.o b/src/kern/compile/ASST0/lser_att.o
deleted file mode 100644
index de5ed26..0000000
Binary files a/src/kern/compile/ASST0/lser_att.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/ltimer.o b/src/kern/compile/ASST0/ltimer.o
deleted file mode 100644
index 75c1bda..0000000
Binary files a/src/kern/compile/ASST0/ltimer.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/ltimer_att.o b/src/kern/compile/ASST0/ltimer_att.o
deleted file mode 100644
index c924dc3..0000000
Binary files a/src/kern/compile/ASST0/ltimer_att.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/ltrace.o b/src/kern/compile/ASST0/ltrace.o
deleted file mode 100644
index b46d175..0000000
Binary files a/src/kern/compile/ASST0/ltrace.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/ltrace_att.o b/src/kern/compile/ASST0/ltrace_att.o
deleted file mode 100644
index c218643..0000000
Binary files a/src/kern/compile/ASST0/ltrace_att.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/machine b/src/kern/compile/ASST0/machine
deleted file mode 120000
index c12f325..0000000
--- a/src/kern/compile/ASST0/machine
+++ /dev/null
@@ -1 +0,0 @@
-../../arch/mips/include
\ No newline at end of file
diff --git a/src/kern/compile/ASST0/main.o b/src/kern/compile/ASST0/main.o
deleted file mode 100644
index 599a44a..0000000
Binary files a/src/kern/compile/ASST0/main.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/malloctest.o b/src/kern/compile/ASST0/malloctest.o
deleted file mode 100644
index 7a1ef6e..0000000
Binary files a/src/kern/compile/ASST0/malloctest.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/memcpy.o b/src/kern/compile/ASST0/memcpy.o
deleted file mode 100644
index 7b67b80..0000000
Binary files a/src/kern/compile/ASST0/memcpy.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/memmove.o b/src/kern/compile/ASST0/memmove.o
deleted file mode 100644
index e34f027..0000000
Binary files a/src/kern/compile/ASST0/memmove.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/menu.o b/src/kern/compile/ASST0/menu.o
deleted file mode 100644
index 843e054..0000000
Binary files a/src/kern/compile/ASST0/menu.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/mips-setjmp.o b/src/kern/compile/ASST0/mips-setjmp.o
deleted file mode 100644
index f535872..0000000
Binary files a/src/kern/compile/ASST0/mips-setjmp.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/misc.o b/src/kern/compile/ASST0/misc.o
deleted file mode 100644
index fba8ebd..0000000
Binary files a/src/kern/compile/ASST0/misc.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/ntoh.o b/src/kern/compile/ASST0/ntoh.o
deleted file mode 100644
index 0e099f3..0000000
Binary files a/src/kern/compile/ASST0/ntoh.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/opt-dumbvm.h b/src/kern/compile/ASST0/opt-dumbvm.h
deleted file mode 100644
index 7db9b01..0000000
--- a/src/kern/compile/ASST0/opt-dumbvm.h
+++ /dev/null
@@ -1,5 +0,0 @@
-/* Automatically generated; do not edit */
-#ifndef _OPT_DUMBVM_H_
-#define _OPT_DUMBVM_H_
-#define OPT_DUMBVM 1
-#endif /* _OPT_DUMBVM_H_ */
diff --git a/src/kern/compile/ASST0/opt-net.h b/src/kern/compile/ASST0/opt-net.h
deleted file mode 100644
index 0340a83..0000000
--- a/src/kern/compile/ASST0/opt-net.h
+++ /dev/null
@@ -1,5 +0,0 @@
-/* Automatically generated; do not edit */
-#ifndef _OPT_NET_H_
-#define _OPT_NET_H_
-#define OPT_NET 0
-#endif /* _OPT_NET_H_ */
diff --git a/src/kern/compile/ASST0/opt-netfs.h b/src/kern/compile/ASST0/opt-netfs.h
deleted file mode 100644
index cd21c56..0000000
--- a/src/kern/compile/ASST0/opt-netfs.h
+++ /dev/null
@@ -1,5 +0,0 @@
-/* Automatically generated; do not edit */
-#ifndef _OPT_NETFS_H_
-#define _OPT_NETFS_H_
-#define OPT_NETFS 0
-#endif /* _OPT_NETFS_H_ */
diff --git a/src/kern/compile/ASST0/opt-sfs.h b/src/kern/compile/ASST0/opt-sfs.h
deleted file mode 100644
index 94095ad..0000000
--- a/src/kern/compile/ASST0/opt-sfs.h
+++ /dev/null
@@ -1,5 +0,0 @@
-/* Automatically generated; do not edit */
-#ifndef _OPT_SFS_H_
-#define _OPT_SFS_H_
-#define OPT_SFS 1
-#endif /* _OPT_SFS_H_ */
diff --git a/src/kern/compile/ASST0/opt-synchprobs.h b/src/kern/compile/ASST0/opt-synchprobs.h
deleted file mode 100644
index 9114407..0000000
--- a/src/kern/compile/ASST0/opt-synchprobs.h
+++ /dev/null
@@ -1,5 +0,0 @@
-/* Automatically generated; do not edit */
-#ifndef _OPT_SYNCHPROBS_H_
-#define _OPT_SYNCHPROBS_H_
-#define OPT_SYNCHPROBS 0
-#endif /* _OPT_SYNCHPROBS_H_ */
diff --git a/src/kern/compile/ASST0/pcb.o b/src/kern/compile/ASST0/pcb.o
deleted file mode 100644
index e100b79..0000000
Binary files a/src/kern/compile/ASST0/pcb.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/pseudorand.o b/src/kern/compile/ASST0/pseudorand.o
deleted file mode 100644
index 14ee10c..0000000
Binary files a/src/kern/compile/ASST0/pseudorand.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/pseudorand_att.o b/src/kern/compile/ASST0/pseudorand_att.o
deleted file mode 100644
index 8d53437..0000000
Binary files a/src/kern/compile/ASST0/pseudorand_att.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/queue.o b/src/kern/compile/ASST0/queue.o
deleted file mode 100644
index 45d3f41..0000000
Binary files a/src/kern/compile/ASST0/queue.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/queuetest.o b/src/kern/compile/ASST0/queuetest.o
deleted file mode 100644
index 4c9a27b..0000000
Binary files a/src/kern/compile/ASST0/queuetest.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/ram.o b/src/kern/compile/ASST0/ram.o
deleted file mode 100644
index 9548984..0000000
Binary files a/src/kern/compile/ASST0/ram.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/random.o b/src/kern/compile/ASST0/random.o
deleted file mode 100644
index b041ddb..0000000
Binary files a/src/kern/compile/ASST0/random.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/random_lrandom.o b/src/kern/compile/ASST0/random_lrandom.o
deleted file mode 100644
index 987571b..0000000
Binary files a/src/kern/compile/ASST0/random_lrandom.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/rtclock.o b/src/kern/compile/ASST0/rtclock.o
deleted file mode 100644
index 886b02c..0000000
Binary files a/src/kern/compile/ASST0/rtclock.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/rtclock_ltimer.o b/src/kern/compile/ASST0/rtclock_ltimer.o
deleted file mode 100644
index 6eb7f25..0000000
Binary files a/src/kern/compile/ASST0/rtclock_ltimer.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/runprogram.o b/src/kern/compile/ASST0/runprogram.o
deleted file mode 100644
index 64c6e66..0000000
Binary files a/src/kern/compile/ASST0/runprogram.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/scheduler.o b/src/kern/compile/ASST0/scheduler.o
deleted file mode 100644
index 16692d7..0000000
Binary files a/src/kern/compile/ASST0/scheduler.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/sfs_fs.o b/src/kern/compile/ASST0/sfs_fs.o
deleted file mode 100644
index efd3dcb..0000000
Binary files a/src/kern/compile/ASST0/sfs_fs.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/sfs_io.o b/src/kern/compile/ASST0/sfs_io.o
deleted file mode 100644
index 8aaac7c..0000000
Binary files a/src/kern/compile/ASST0/sfs_io.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/sfs_vnode.o b/src/kern/compile/ASST0/sfs_vnode.o
deleted file mode 100644
index 323248c..0000000
Binary files a/src/kern/compile/ASST0/sfs_vnode.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/snprintf.o b/src/kern/compile/ASST0/snprintf.o
deleted file mode 100644
index 44bfa99..0000000
Binary files a/src/kern/compile/ASST0/snprintf.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/spl.o b/src/kern/compile/ASST0/spl.o
deleted file mode 100644
index e4ba52e..0000000
Binary files a/src/kern/compile/ASST0/spl.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/start.o b/src/kern/compile/ASST0/start.o
deleted file mode 100644
index c2a9bb0..0000000
Binary files a/src/kern/compile/ASST0/start.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/strcat.o b/src/kern/compile/ASST0/strcat.o
deleted file mode 100644
index f6b816c..0000000
Binary files a/src/kern/compile/ASST0/strcat.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/strchr.o b/src/kern/compile/ASST0/strchr.o
deleted file mode 100644
index ebc93b0..0000000
Binary files a/src/kern/compile/ASST0/strchr.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/strcmp.o b/src/kern/compile/ASST0/strcmp.o
deleted file mode 100644
index da9d1f1..0000000
Binary files a/src/kern/compile/ASST0/strcmp.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/strcpy.o b/src/kern/compile/ASST0/strcpy.o
deleted file mode 100644
index 951cf98..0000000
Binary files a/src/kern/compile/ASST0/strcpy.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/strlen.o b/src/kern/compile/ASST0/strlen.o
deleted file mode 100644
index e2dd51d..0000000
Binary files a/src/kern/compile/ASST0/strlen.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/strrchr.o b/src/kern/compile/ASST0/strrchr.o
deleted file mode 100644
index 6788bb0..0000000
Binary files a/src/kern/compile/ASST0/strrchr.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/strtok_r.o b/src/kern/compile/ASST0/strtok_r.o
deleted file mode 100644
index 75687b8..0000000
Binary files a/src/kern/compile/ASST0/strtok_r.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/switch.o b/src/kern/compile/ASST0/switch.o
deleted file mode 100644
index d714332..0000000
Binary files a/src/kern/compile/ASST0/switch.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/synch.o b/src/kern/compile/ASST0/synch.o
deleted file mode 100644
index 5e98682..0000000
Binary files a/src/kern/compile/ASST0/synch.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/synchtest.o b/src/kern/compile/ASST0/synchtest.o
deleted file mode 100644
index 2d3e032..0000000
Binary files a/src/kern/compile/ASST0/synchtest.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/syscall.o b/src/kern/compile/ASST0/syscall.o
deleted file mode 100644
index a9fa3ef..0000000
Binary files a/src/kern/compile/ASST0/syscall.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/thread.o b/src/kern/compile/ASST0/thread.o
deleted file mode 100644
index 52e9c77..0000000
Binary files a/src/kern/compile/ASST0/thread.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/threadstart.o b/src/kern/compile/ASST0/threadstart.o
deleted file mode 100644
index 2c377bf..0000000
Binary files a/src/kern/compile/ASST0/threadstart.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/threadtest.o b/src/kern/compile/ASST0/threadtest.o
deleted file mode 100644
index 773039f..0000000
Binary files a/src/kern/compile/ASST0/threadtest.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/tlb_mips1.o b/src/kern/compile/ASST0/tlb_mips1.o
deleted file mode 100644
index df7e6cf..0000000
Binary files a/src/kern/compile/ASST0/tlb_mips1.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/trap.o b/src/kern/compile/ASST0/trap.o
deleted file mode 100644
index fb0e220..0000000
Binary files a/src/kern/compile/ASST0/trap.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/tt3.o b/src/kern/compile/ASST0/tt3.o
deleted file mode 100644
index 91b022a..0000000
Binary files a/src/kern/compile/ASST0/tt3.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/uio.o b/src/kern/compile/ASST0/uio.o
deleted file mode 100644
index 649efaa..0000000
Binary files a/src/kern/compile/ASST0/uio.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/vers.c b/src/kern/compile/ASST0/vers.c
deleted file mode 100644
index e62ace8..0000000
--- a/src/kern/compile/ASST0/vers.c
+++ /dev/null
@@ -1,3 +0,0 @@
-/* This file is automatically generated. Edits will be lost.*/
-const int buildversion = 7;
-const char buildconfig[] = "ASST0";
diff --git a/src/kern/compile/ASST0/vers.o b/src/kern/compile/ASST0/vers.o
deleted file mode 100644
index 3a66d90..0000000
Binary files a/src/kern/compile/ASST0/vers.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/version b/src/kern/compile/ASST0/version
deleted file mode 100644
index 7f8f011..0000000
--- a/src/kern/compile/ASST0/version
+++ /dev/null
@@ -1 +0,0 @@
-7
diff --git a/src/kern/compile/ASST0/vfscwd.o b/src/kern/compile/ASST0/vfscwd.o
deleted file mode 100644
index cdd8b71..0000000
Binary files a/src/kern/compile/ASST0/vfscwd.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/vfslist.o b/src/kern/compile/ASST0/vfslist.o
deleted file mode 100644
index c6508b5..0000000
Binary files a/src/kern/compile/ASST0/vfslist.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/vfslookup.o b/src/kern/compile/ASST0/vfslookup.o
deleted file mode 100644
index 850416a..0000000
Binary files a/src/kern/compile/ASST0/vfslookup.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/vfspath.o b/src/kern/compile/ASST0/vfspath.o
deleted file mode 100644
index 25814c3..0000000
Binary files a/src/kern/compile/ASST0/vfspath.o and /dev/null differ
diff --git a/src/kern/compile/ASST0/vnode.o b/src/kern/compile/ASST0/vnode.o
deleted file mode 100644
index b08801c..0000000
Binary files a/src/kern/compile/ASST0/vnode.o and /dev/null differ
diff --git a/src/kern/compile/ASST1/Makefile b/src/kern/compile/ASST1/Makefile
new file mode 100644
index 0000000..266ee72
--- /dev/null
+++ b/src/kern/compile/ASST1/Makefile
@@ -0,0 +1,197 @@
+# Automatically generated by config.
+# Edit arch/mips/conf/Makefile.mips instead, and rerun config.
+#
+
+#
+#
+# Makefile.mips
+#
+# OS/161 kernel makefile base for the MIPS r2000/r3000.
+#
+# The actual makefiles used are copies of this file - if you want to edit,
+# edit kern/arch/mips/conf/Makefile.mips and rerun config.
+#
+
+
+#
+# Filename for the kernel.
+#
+KERNEL=kernel
+
+#
+# Get the defs that were dumped out from the kernel config tool.
+# This defines:
+#	S		Path for top of kernel source tree
+#	ARCH		Architecture ("mips")
+#	DEBUGFLAGS	-O2 or -g
+#	CONFNAME	The name of the kernel config, e.g., ASST1
+#
+include defs.mk
+
+#
+# Get the tree-wide defs.
+# This defines (that we use):
+#	OSTREE		Path for top of installed system tree
+#	CC		C compiler
+#	KCFLAGS		C compiler flags for kernel
+#	LD		Linker
+#	KLDFLAGS	Linker flags for kernel
+#	SIZE		Object file size tool
+#
+include $S/../defs.mk
+
+#
+# Adjust defs for building the kernel.
+#
+# The LOAD_ADDRESS is the virtual address where the kernel will be loaded
+# into memory. This is in the direct-mapped cached segment of the MIPS
+# address space. -Ttext is the linker option for setting it.
+#
+# -T provides the linker with a "linker script". This is a piece of
+# obscure mumble that tells the linker how to put together the output
+# program. The only reason we need it is that the linker breaks if you
+# try to use -Ttext and its default built-in linker script at the same
+# time.
+#
+# -nostdinc prevents including header files other than our own, and 
+# -nostdlib prevents linking against any standard libraries. Because
+# the kernel has to be a completely standalone program, this is important.
+#
+# -ffreestanding tells gcc this is not an ordinary program, so it will
+# make fewer unwise assumptions about standard library functions.
+#
+# We define _KERNEL so certain source files that are shared between the
+# kernel and userland (like strcpy.c) can tell the difference so they know
+# which header files to use.
+#
+# -G 0 tells the assembler and linker not to reference global variables
+# via the "global pointer" (MIPS gp register) because we don't support 
+# handling the gp register.
+#
+LOAD_ADDRESS=0x80001000
+INCLUDES=-nostdinc -I$S/include -I$S/dev -I. 
+CFLAGS=$(KCFLAGS) $(DEBUGFLAGS) $(INCLUDES) -ffreestanding -D_KERNEL -G 0
+LDFLAGS=$(KLDFLAGS) -nostdlib \
+	-Ttext $(LOAD_ADDRESS) -T $S/arch/mips/conf/ldscript \
+	-G 0
+
+#
+# Rules for compiling various kinds of source files, by suffix.
+# (There's nothing magical about these names and make.)
+#
+# We don't actually use C++ in OS/161, although, with some fiddling,
+# you might be able to. But you must turn off exceptions and RTTI in
+# order to do so (the implementations of these in gcc are completely 
+# unsuitable for kernels.)
+#
+COMPILE.cc=$(CC) $(CFLAGS) -fno-rtti -fno-exceptions -c
+COMPILE.c=$(CC) $(CFLAGS) -c
+COMPILE.l=false   # redefine when needed 
+COMPILE.y=false   # redefine when needed 
+COMPILE.S=$(CC) $(CFLAGS) -c
+
+#
+# This should expand to all the header files in the kernel so they can
+# be fed to tags.
+#
+TAGS_HEADERS=$S/include/*.h $S/include/kern/*.h $S/arch/$(ARCH)/include/*.h
+
+#
+# Default make rule: build the kernel.
+#
+all: $(KERNEL)
+
+#
+# Here's how we link the kernel. 
+#
+# vers.c/.o is generated on every build. It contains a numeric serial
+# number incremented every time newvers.sh is run.  These values are
+# printed out by newvers.sh and are also displayed at boot time. This
+# makes it possible to tell at a glance whether you're actually
+# running the same kernel you just compiled.
+#
+# The version number is kept in the file called "version" in the build
+# directory.
+#
+# By immemorial tradition, "size" is run on the kernel after it's linked.
+#
+$(KERNEL):
+	$S/conf/newvers.sh $(CONFNAME)
+	$(COMPILE.c) vers.c
+	$(LD) $(LDFLAGS) $(OBJS) vers.o -o $(KERNEL)
+	$(SIZE) $(KERNEL)
+
+#
+# Use the -M argument to gcc to get it to output dependency information.
+# Note that we use -M, which includes deps for #include <...> files,
+# rather than -MM, which doesn't. This is because we are the operating
+# system: the #include <...> files are part of our project - in fact, in
+# the kernel they're the kernel's own include files - and they will be
+# changing!
+#
+depend:
+	$(CC) $(CFLAGS) -M $(SRCS) > depend.mk
+
+#
+# Remove everything generated during the compile.
+# (To remove absolutely everything automatically generated, you can just
+# blow away the whole compile directory.)
+#
+clean:
+	rm -f *.o *.a tags $(KERNEL)
+
+#
+# Rerun config for this configuration.
+#
+reconfig:
+	(cd ../../conf && ./config $(CONFNAME))
+
+#
+# [ -d $(OSTREE) ] succeeds if $(OSTREE) is a directory.
+# (See test(1).) Thus, if $(OSTREE) doesn't exist, it will be created.
+#
+
+# The kernel gets installed at the top of the installed system tree.
+# Since with OS/161 it's relatively likely that you'll be working with
+# several configurations at once, it gets installed under the name of
+# this config, and a symbolic link with the "real" name is set up to
+# point to the last kernel installed.
+#
+install:
+	[ -d $(OSTREE) ] || mkdir $(OSTREE)
+	cp $(KERNEL) $(OSTREE)/$(KERNEL)-$(CONFNAME)
+	-rm -f $(OSTREE)/$(KERNEL)
+	ln -s $(KERNEL)-$(CONFNAME) $(OSTREE)/$(KERNEL)
+
+#
+# Run tags on all the sources and header files. This is probably not
+# the most useful way to do this and needs attention. (XXX)
+#
+tags:
+	ctags -wtd $(SRCS) $(TAGS_HEADERS)
+
+#
+# This tells make that these rules are not files so it (hopefully)
+# won't become confused if files by those names appear.
+#
+.PHONY: all depend clean install tags reconfig
+
+#
+# Get the list of source files from where it was generated by the 
+# kernel config tool.
+#
+# This sets SRCS and OBJS, and also defines a rule for compiling each
+# source file.
+#
+include files.mk
+
+# Get dependency information.
+include depend.mk
+
+#
+# Tell make that the kernel depends on the object files listed in $(OBJS).
+# This (unlike the link commands that also use $(OBJS) above) must come
+# after the include of files.mk, because of the way make reads its input
+# and evaluates variables.
+#
+$(KERNEL): $(OBJS)
diff --git a/src/kern/compile/ASST1/__printf.o b/src/kern/compile/ASST1/__printf.o
new file mode 100644
index 0000000..109c806
Binary files /dev/null and b/src/kern/compile/ASST1/__printf.o differ
diff --git a/src/kern/compile/ASST1/array.o b/src/kern/compile/ASST1/array.o
new file mode 100644
index 0000000..65cb1a1
Binary files /dev/null and b/src/kern/compile/ASST1/array.o differ
diff --git a/src/kern/compile/ASST1/arraytest.o b/src/kern/compile/ASST1/arraytest.o
new file mode 100644
index 0000000..0955a3b
Binary files /dev/null and b/src/kern/compile/ASST1/arraytest.o differ
diff --git a/src/kern/compile/ASST1/atoi.o b/src/kern/compile/ASST1/atoi.o
new file mode 100644
index 0000000..3751809
Binary files /dev/null and b/src/kern/compile/ASST1/atoi.o differ
diff --git a/src/kern/compile/ASST1/autoconf.c b/src/kern/compile/ASST1/autoconf.c
new file mode 100644
index 0000000..59a323e
--- /dev/null
+++ b/src/kern/compile/ASST1/autoconf.c
@@ -0,0 +1,455 @@
+/* Automatically generated; do not edit */
+#include <types.h>
+#include <lib.h>
+#include "autoconf.h"
+
+static void autoconf_beep(struct beep_softc *, int);
+static void autoconf_con(struct con_softc *, int);
+static void autoconf_emu(struct emu_softc *, int);
+static void autoconf_lhd(struct lhd_softc *, int);
+static void autoconf_lrandom(struct lrandom_softc *, int);
+static void autoconf_lser(struct lser_softc *, int);
+static void autoconf_ltimer(struct ltimer_softc *, int);
+static void autoconf_ltrace(struct ltrace_softc *, int);
+static void autoconf_pseudorand(struct pseudorand_softc *, int);
+static void autoconf_random(struct random_softc *, int);
+static void autoconf_rtclock(struct rtclock_softc *, int);
+static int nextunit_beep;
+static int nextunit_con;
+static int nextunit_emu;
+static int nextunit_lhd;
+static int nextunit_lrandom;
+static int nextunit_lser;
+static int nextunit_ltimer;
+static int nextunit_ltrace;
+static int nextunit_random;
+static int nextunit_rtclock;
+
+static
+int
+tryattach_emu_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
+{
+	struct emu_softc *dev;
+	int result;
+
+	dev = attach_emu_to_lamebus(devunit, bus);
+	if (dev==NULL) {
+		return -1;
+	}
+	kprintf("emu%d at lamebus%d", devunit, busunit);
+	result = config_emu(dev, devunit);
+	if (result != 0) {
+		kprintf(": %s\n", strerror(result));
+		/* should really clean up dev */
+		return result;
+	}
+	kprintf("\n");
+	nextunit_emu = devunit+1;
+	autoconf_emu(dev, devunit);
+	return 0;
+}
+
+static
+int
+tryattach_ltrace_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
+{
+	struct ltrace_softc *dev;
+	int result;
+
+	dev = attach_ltrace_to_lamebus(devunit, bus);
+	if (dev==NULL) {
+		return -1;
+	}
+	kprintf("ltrace%d at lamebus%d", devunit, busunit);
+	result = config_ltrace(dev, devunit);
+	if (result != 0) {
+		kprintf(": %s\n", strerror(result));
+		/* should really clean up dev */
+		return result;
+	}
+	kprintf("\n");
+	nextunit_ltrace = devunit+1;
+	autoconf_ltrace(dev, devunit);
+	return 0;
+}
+
+static
+int
+tryattach_ltimer_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
+{
+	struct ltimer_softc *dev;
+	int result;
+
+	dev = attach_ltimer_to_lamebus(devunit, bus);
+	if (dev==NULL) {
+		return -1;
+	}
+	kprintf("ltimer%d at lamebus%d", devunit, busunit);
+	result = config_ltimer(dev, devunit);
+	if (result != 0) {
+		kprintf(": %s\n", strerror(result));
+		/* should really clean up dev */
+		return result;
+	}
+	kprintf("\n");
+	nextunit_ltimer = devunit+1;
+	autoconf_ltimer(dev, devunit);
+	return 0;
+}
+
+static
+int
+tryattach_lrandom_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
+{
+	struct lrandom_softc *dev;
+	int result;
+
+	dev = attach_lrandom_to_lamebus(devunit, bus);
+	if (dev==NULL) {
+		return -1;
+	}
+	kprintf("lrandom%d at lamebus%d", devunit, busunit);
+	result = config_lrandom(dev, devunit);
+	if (result != 0) {
+		kprintf(": %s\n", strerror(result));
+		/* should really clean up dev */
+		return result;
+	}
+	kprintf("\n");
+	nextunit_lrandom = devunit+1;
+	autoconf_lrandom(dev, devunit);
+	return 0;
+}
+
+static
+int
+tryattach_lhd_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
+{
+	struct lhd_softc *dev;
+	int result;
+
+	dev = attach_lhd_to_lamebus(devunit, bus);
+	if (dev==NULL) {
+		return -1;
+	}
+	kprintf("lhd%d at lamebus%d", devunit, busunit);
+	result = config_lhd(dev, devunit);
+	if (result != 0) {
+		kprintf(": %s\n", strerror(result));
+		/* should really clean up dev */
+		return result;
+	}
+	kprintf("\n");
+	nextunit_lhd = devunit+1;
+	autoconf_lhd(dev, devunit);
+	return 0;
+}
+
+static
+int
+tryattach_lser_to_lamebus(int devunit, struct lamebus_softc *bus, int busunit)
+{
+	struct lser_softc *dev;
+	int result;
+
+	dev = attach_lser_to_lamebus(devunit, bus);
+	if (dev==NULL) {
+		return -1;
+	}
+	kprintf("lser%d at lamebus%d", devunit, busunit);
+	result = config_lser(dev, devunit);
+	if (result != 0) {
+		kprintf(": %s\n", strerror(result));
+		/* should really clean up dev */
+		return result;
+	}
+	kprintf("\n");
+	nextunit_lser = devunit+1;
+	autoconf_lser(dev, devunit);
+	return 0;
+}
+
+static
+int
+tryattach_beep_to_ltimer(int devunit, struct ltimer_softc *bus, int busunit)
+{
+	struct beep_softc *dev;
+	int result;
+
+	dev = attach_beep_to_ltimer(devunit, bus);
+	if (dev==NULL) {
+		return -1;
+	}
+	kprintf("beep%d at ltimer%d", devunit, busunit);
+	result = config_beep(dev, devunit);
+	if (result != 0) {
+		kprintf(": %s\n", strerror(result));
+		/* should really clean up dev */
+		return result;
+	}
+	kprintf("\n");
+	nextunit_beep = devunit+1;
+	autoconf_beep(dev, devunit);
+	return 0;
+}
+
+static
+int
+tryattach_con_to_lser(int devunit, struct lser_softc *bus, int busunit)
+{
+	struct con_softc *dev;
+	int result;
+
+	dev = attach_con_to_lser(devunit, bus);
+	if (dev==NULL) {
+		return -1;
+	}
+	kprintf("con%d at lser%d", devunit, busunit);
+	result = config_con(dev, devunit);
+	if (result != 0) {
+		kprintf(": %s\n", strerror(result));
+		/* should really clean up dev */
+		return result;
+	}
+	kprintf("\n");
+	nextunit_con = devunit+1;
+	autoconf_con(dev, devunit);
+	return 0;
+}
+
+static
+int
+tryattach_rtclock_to_ltimer(int devunit, struct ltimer_softc *bus, int busunit)
+{
+	struct rtclock_softc *dev;
+	int result;
+
+	dev = attach_rtclock_to_ltimer(devunit, bus);
+	if (dev==NULL) {
+		return -1;
+	}
+	kprintf("rtclock%d at ltimer%d", devunit, busunit);
+	result = config_rtclock(dev, devunit);
+	if (result != 0) {
+		kprintf(": %s\n", strerror(result));
+		/* should really clean up dev */
+		return result;
+	}
+	kprintf("\n");
+	nextunit_rtclock = devunit+1;
+	autoconf_rtclock(dev, devunit);
+	return 0;
+}
+
+static
+int
+tryattach_random_to_lrandom(int devunit, struct lrandom_softc *bus, int busunit)
+{
+	struct random_softc *dev;
+	int result;
+
+	dev = attach_random_to_lrandom(devunit, bus);
+	if (dev==NULL) {
+		return -1;
+	}
+	kprintf("random%d at lrandom%d", devunit, busunit);
+	result = config_random(dev, devunit);
+	if (result != 0) {
+		kprintf(": %s\n", strerror(result));
+		/* should really clean up dev */
+		return result;
+	}
+	kprintf("\n");
+	nextunit_random = devunit+1;
+	autoconf_random(dev, devunit);
+	return 0;
+}
+
+static
+int
+tryattach_random_to_pseudorand(int devunit, struct pseudorand_softc *bus, int busunit)
+{
+	struct random_softc *dev;
+	int result;
+
+	dev = attach_random_to_pseudorand(devunit, bus);
+	if (dev==NULL) {
+		return -1;
+	}
+	kprintf("random%d at pseudorand%d", devunit, busunit);
+	result = config_random(dev, devunit);
+	if (result != 0) {
+		kprintf(": %s\n", strerror(result));
+		/* should really clean up dev */
+		return result;
+	}
+	kprintf("\n");
+	nextunit_random = devunit+1;
+	autoconf_random(dev, devunit);
+	return 0;
+}
+
+
+static
+void
+autoconf_lhd(struct lhd_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+}
+
+static
+void
+autoconf_random(struct random_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+}
+
+static
+void
+autoconf_rtclock(struct rtclock_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+}
+
+static
+void
+autoconf_emu(struct emu_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+}
+
+void
+autoconf_pseudorand(struct pseudorand_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+	if (busunit==0) {
+		if (nextunit_random <= 0) {
+			tryattach_random_to_pseudorand(0, bus, busunit);
+		}
+	}
+}
+
+static
+void
+autoconf_ltrace(struct ltrace_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+}
+
+static
+void
+autoconf_con(struct con_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+}
+
+void
+autoconf_lamebus(struct lamebus_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+	{
+		int result, devunit=nextunit_emu;
+		do {
+			result = tryattach_emu_to_lamebus(devunit, bus, busunit);
+			devunit++;
+		} while (result==0);
+	}
+	{
+		int result, devunit=nextunit_ltrace;
+		do {
+			result = tryattach_ltrace_to_lamebus(devunit, bus, busunit);
+			devunit++;
+		} while (result==0);
+	}
+	{
+		int result, devunit=nextunit_ltimer;
+		do {
+			result = tryattach_ltimer_to_lamebus(devunit, bus, busunit);
+			devunit++;
+		} while (result==0);
+	}
+	{
+		int result, devunit=nextunit_lrandom;
+		do {
+			result = tryattach_lrandom_to_lamebus(devunit, bus, busunit);
+			devunit++;
+		} while (result==0);
+	}
+	{
+		int result, devunit=nextunit_lhd;
+		do {
+			result = tryattach_lhd_to_lamebus(devunit, bus, busunit);
+			devunit++;
+		} while (result==0);
+	}
+	{
+		int result, devunit=nextunit_lser;
+		do {
+			result = tryattach_lser_to_lamebus(devunit, bus, busunit);
+			devunit++;
+		} while (result==0);
+	}
+}
+
+static
+void
+autoconf_beep(struct beep_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+}
+
+static
+void
+autoconf_lser(struct lser_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+	{
+		if (nextunit_con <= 0) {
+			tryattach_con_to_lser(0, bus, busunit);
+		}
+	}
+}
+
+static
+void
+autoconf_lrandom(struct lrandom_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+	{
+		if (nextunit_random <= 0) {
+			tryattach_random_to_lrandom(0, bus, busunit);
+		}
+	}
+}
+
+static
+void
+autoconf_ltimer(struct ltimer_softc *bus, int busunit)
+{
+	(void)bus; (void)busunit;
+	{
+		if (nextunit_beep <= 0) {
+			tryattach_beep_to_ltimer(0, bus, busunit);
+		}
+	}
+	{
+		if (nextunit_rtclock <= 0) {
+			tryattach_rtclock_to_ltimer(0, bus, busunit);
+		}
+	}
+}
+
+void
+pseudoconfig(void)
+{
+	{
+		struct pseudorand_softc *s;
+		
+		s = pseudoattach_pseudorand(0);
+		if (s!=NULL) {
+			kprintf("pseudorand0 (virtual)\n");
+			autoconf_pseudorand(s, 0);
+		}
+	}
+}
+
diff --git a/src/kern/compile/ASST1/autoconf.h b/src/kern/compile/ASST1/autoconf.h
new file mode 100644
index 0000000..13ab76c
--- /dev/null
+++ b/src/kern/compile/ASST1/autoconf.h
@@ -0,0 +1,48 @@
+/* Automatically generated; do not edit */
+#ifndef _AUTOCONF_H_
+#define _AUTOCONF_H_
+
+struct lamebus_softc;
+struct emu_softc;
+struct ltrace_softc;
+struct ltimer_softc;
+struct lrandom_softc;
+struct lhd_softc;
+struct lser_softc;
+struct beep_softc;
+struct con_softc;
+struct rtclock_softc;
+struct random_softc;
+struct pseudorand_softc;
+struct random_softc;
+
+void autoconf_lamebus(struct lamebus_softc *dev, int unit);
+
+struct emu_softc *attach_emu_to_lamebus(int devunit, struct lamebus_softc *bus);
+struct ltrace_softc *attach_ltrace_to_lamebus(int devunit, struct lamebus_softc *bus);
+struct ltimer_softc *attach_ltimer_to_lamebus(int devunit, struct lamebus_softc *bus);
+struct lrandom_softc *attach_lrandom_to_lamebus(int devunit, struct lamebus_softc *bus);
+struct lhd_softc *attach_lhd_to_lamebus(int devunit, struct lamebus_softc *bus);
+struct lser_softc *attach_lser_to_lamebus(int devunit, struct lamebus_softc *bus);
+struct beep_softc *attach_beep_to_ltimer(int devunit, struct ltimer_softc *bus);
+struct con_softc *attach_con_to_lser(int devunit, struct lser_softc *bus);
+struct rtclock_softc *attach_rtclock_to_ltimer(int devunit, struct ltimer_softc *bus);
+struct random_softc *attach_random_to_lrandom(int devunit, struct lrandom_softc *bus);
+struct pseudorand_softc *pseudoattach_pseudorand(int devunit);
+struct random_softc *attach_random_to_pseudorand(int devunit, struct pseudorand_softc *bus);
+
+int config_emu(struct emu_softc *dev, int unit);
+int config_ltrace(struct ltrace_softc *dev, int unit);
+int config_ltimer(struct ltimer_softc *dev, int unit);
+int config_lrandom(struct lrandom_softc *dev, int unit);
+int config_lhd(struct lhd_softc *dev, int unit);
+int config_lser(struct lser_softc *dev, int unit);
+int config_beep(struct beep_softc *dev, int unit);
+int config_con(struct con_softc *dev, int unit);
+int config_rtclock(struct rtclock_softc *dev, int unit);
+int config_random(struct random_softc *dev, int unit);
+int config_random(struct random_softc *dev, int unit);
+
+void pseudoconfig(void);
+
+#endif /* _AUTOCONF_H_ */
diff --git a/src/kern/compile/ASST1/autoconf.o b/src/kern/compile/ASST1/autoconf.o
new file mode 100644
index 0000000..67708ba
Binary files /dev/null and b/src/kern/compile/ASST1/autoconf.o differ
diff --git a/src/kern/compile/ASST1/beep.o b/src/kern/compile/ASST1/beep.o
new file mode 100644
index 0000000..b0e19b4
Binary files /dev/null and b/src/kern/compile/ASST1/beep.o differ
diff --git a/src/kern/compile/ASST1/beep_ltimer.o b/src/kern/compile/ASST1/beep_ltimer.o
new file mode 100644
index 0000000..24ecfcb
Binary files /dev/null and b/src/kern/compile/ASST1/beep_ltimer.o differ
diff --git a/src/kern/compile/ASST1/bitmap.o b/src/kern/compile/ASST1/bitmap.o
new file mode 100644
index 0000000..52f1ee3
Binary files /dev/null and b/src/kern/compile/ASST1/bitmap.o differ
diff --git a/src/kern/compile/ASST1/bitmaptest.o b/src/kern/compile/ASST1/bitmaptest.o
new file mode 100644
index 0000000..57983dd
Binary files /dev/null and b/src/kern/compile/ASST1/bitmaptest.o differ
diff --git a/src/kern/compile/ASST1/bzero.o b/src/kern/compile/ASST1/bzero.o
new file mode 100644
index 0000000..b24cf25
Binary files /dev/null and b/src/kern/compile/ASST1/bzero.o differ
diff --git a/src/kern/compile/ASST1/cache_mips1.o b/src/kern/compile/ASST1/cache_mips1.o
new file mode 100644
index 0000000..8503cec
Binary files /dev/null and b/src/kern/compile/ASST1/cache_mips1.o differ
diff --git a/src/kern/compile/ASST1/catlock.o b/src/kern/compile/ASST1/catlock.o
new file mode 100644
index 0000000..42c6d44
Binary files /dev/null and b/src/kern/compile/ASST1/catlock.o differ
diff --git a/src/kern/compile/ASST1/catsem.o b/src/kern/compile/ASST1/catsem.o
new file mode 100644
index 0000000..b078c54
Binary files /dev/null and b/src/kern/compile/ASST1/catsem.o differ
diff --git a/src/kern/compile/ASST1/con_lser.o b/src/kern/compile/ASST1/con_lser.o
new file mode 100644
index 0000000..855d225
Binary files /dev/null and b/src/kern/compile/ASST1/con_lser.o differ
diff --git a/src/kern/compile/ASST1/console.o b/src/kern/compile/ASST1/console.o
new file mode 100644
index 0000000..6ed7095
Binary files /dev/null and b/src/kern/compile/ASST1/console.o differ
diff --git a/src/kern/compile/ASST1/copyinout.o b/src/kern/compile/ASST1/copyinout.o
new file mode 100644
index 0000000..0969be5
Binary files /dev/null and b/src/kern/compile/ASST1/copyinout.o differ
diff --git a/src/kern/compile/ASST1/defs.mk b/src/kern/compile/ASST1/defs.mk
new file mode 100644
index 0000000..09db3ea
--- /dev/null
+++ b/src/kern/compile/ASST1/defs.mk
@@ -0,0 +1,5 @@
+# Automatically generated by config; do not edit
+S=../..
+ARCH=mips
+DEBUGFLAGS=-g
+CONFNAME=ASST1
diff --git a/src/kern/compile/ASST1/depend.mk b/src/kern/compile/ASST1/depend.mk
new file mode 100644
index 0000000..fa790fe
--- /dev/null
+++ b/src/kern/compile/ASST1/depend.mk
@@ -0,0 +1,358 @@
+lhd.o: ../../dev/lamebus/lhd.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/synch.h ../../include/kern/errno.h machine/bus.h \
+  machine/vm.h ../../dev/lamebus/lamebus.h ../../include/uio.h \
+  ../../include/vfs.h ../../dev/lamebus/lhd.h ../../include/dev.h \
+  autoconf.h
+emu.o: ../../dev/lamebus/emu.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/kern/unistd.h ../../include/kern/stat.h \
+  ../../include/lib.h machine/setjmp.h ../../include/synch.h \
+  ../../include/array.h ../../include/uio.h ../../include/vfs.h \
+  ../../include/emufs.h ../../include/vnode.h ../../include/fs.h \
+  ../../dev/lamebus/emu.h machine/bus.h machine/vm.h \
+  ../../dev/lamebus/lamebus.h autoconf.h
+random.o: ../../dev/generic/random.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/kern/unistd.h ../../include/lib.h machine/setjmp.h \
+  ../../include/uio.h ../../include/vfs.h ../../dev/generic/random.h \
+  ../../include/dev.h autoconf.h
+rtclock.o: ../../dev/generic/rtclock.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h ../../include/clock.h \
+  opt-synchprobs.h ../../dev/generic/rtclock.h autoconf.h
+pseudorand.o: ../../dev/generic/pseudorand.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../include/uio.h ../../dev/generic/pseudorand.h \
+  autoconf.h
+ltrace.o: ../../dev/lamebus/ltrace.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h machine/bus.h machine/vm.h ../../dev/lamebus/lamebus.h \
+  ../../dev/lamebus/ltrace.h autoconf.h
+lamebus.o: ../../dev/lamebus/lamebus.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h machine/spl.h ../../dev/lamebus/lamebus.h
+console.o: ../../dev/generic/console.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h machine/spl.h \
+  ../../include/synch.h ../../dev/generic/console.h ../../include/dev.h \
+  ../../include/vfs.h ../../include/uio.h autoconf.h
+lser.o: ../../dev/lamebus/lser.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  machine/spl.h machine/bus.h machine/vm.h ../../dev/lamebus/lamebus.h \
+  ../../dev/lamebus/lser.h autoconf.h
+beep.o: ../../dev/generic/beep.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h ../../dev/generic/beep.h \
+  autoconf.h
+lrandom.o: ../../dev/lamebus/lrandom.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../include/uio.h machine/bus.h machine/vm.h \
+  ../../dev/lamebus/lamebus.h ../../dev/lamebus/lrandom.h autoconf.h
+ltimer.o: ../../dev/lamebus/ltimer.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../include/clock.h opt-synchprobs.h machine/bus.h \
+  machine/vm.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/ltimer.h \
+  autoconf.h
+rtclock_ltimer.o: ../../dev/lamebus/rtclock_ltimer.c \
+  ../../include/types.h machine/types.h ../../include/kern/types.h \
+  ../../include/lib.h machine/setjmp.h ../../dev/generic/rtclock.h \
+  ../../dev/lamebus/ltimer.h autoconf.h
+emu_att.o: ../../dev/lamebus/emu_att.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/emu.h \
+  autoconf.h
+random_lrandom.o: ../../dev/lamebus/random_lrandom.c \
+  ../../include/types.h machine/types.h ../../include/kern/types.h \
+  ../../include/lib.h machine/setjmp.h ../../dev/generic/random.h \
+  ../../include/dev.h ../../dev/lamebus/lrandom.h autoconf.h
+beep_ltimer.o: ../../dev/lamebus/beep_ltimer.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../dev/generic/beep.h ../../dev/lamebus/ltimer.h \
+  autoconf.h
+ltrace_att.o: ../../dev/lamebus/ltrace_att.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/ltrace.h \
+  autoconf.h
+pseudorand_att.o: ../../dev/generic/pseudorand_att.c \
+  ../../include/types.h machine/types.h ../../include/kern/types.h \
+  ../../include/lib.h machine/setjmp.h ../../dev/generic/random.h \
+  ../../include/dev.h ../../dev/generic/pseudorand.h autoconf.h
+con_lser.o: ../../dev/lamebus/con_lser.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../dev/generic/console.h ../../dev/lamebus/lser.h \
+  autoconf.h
+lrandom_att.o: ../../dev/lamebus/lrandom_att.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../dev/lamebus/lamebus.h \
+  ../../dev/lamebus/lrandom.h autoconf.h
+lser_att.o: ../../dev/lamebus/lser_att.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/lser.h \
+  autoconf.h
+lhd_att.o: ../../dev/lamebus/lhd_att.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/lhd.h \
+  ../../include/dev.h autoconf.h
+ltimer_att.o: ../../dev/lamebus/ltimer_att.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../dev/lamebus/lamebus.h ../../dev/lamebus/ltimer.h \
+  autoconf.h
+sfs_io.o: ../../fs/sfs/sfs_io.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h ../../include/uio.h \
+  ../../include/sfs.h ../../include/vnode.h ../../include/fs.h \
+  ../../include/kern/sfs.h ../../include/dev.h
+sfs_fs.o: ../../fs/sfs/sfs_fs.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/kern/errno.h ../../include/array.h ../../include/bitmap.h \
+  ../../include/uio.h ../../include/dev.h ../../include/sfs.h \
+  ../../include/vnode.h ../../include/fs.h ../../include/kern/sfs.h \
+  ../../include/vfs.h
+sfs_vnode.o: ../../fs/sfs/sfs_vnode.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../include/synch.h ../../include/array.h \
+  ../../include/bitmap.h ../../include/kern/stat.h \
+  ../../include/kern/errno.h ../../include/kern/unistd.h \
+  ../../include/uio.h ../../include/dev.h ../../include/sfs.h \
+  ../../include/vnode.h ../../include/fs.h ../../include/kern/sfs.h
+stoplight.o: ../../asst1/stoplight.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../include/test.h ../../include/thread.h \
+  machine/pcb.h
+dumbvm.o: ../../arch/mips/mips/dumbvm.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h ../../include/thread.h \
+  machine/pcb.h ../../include/curthread.h ../../include/addrspace.h \
+  ../../include/vm.h machine/vm.h opt-dumbvm.h machine/spl.h \
+  machine/tlb.h
+catlock.o: ../../asst1/catlock.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/test.h ../../include/thread.h machine/pcb.h
+catsem.o: ../../asst1/catsem.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/test.h ../../include/thread.h machine/pcb.h \
+  ../../include/synch.h
+cache_mips1.o: ../../arch/mips/mips/cache_mips1.S machine/asmdefs.h
+exception.o: ../../arch/mips/mips/exception.S machine/asmdefs.h \
+  machine/specialreg.h
+lamebus_mips.o: ../../arch/mips/mips/lamebus_mips.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/kern/unistd.h \
+  ../../include/lib.h machine/setjmp.h ../../include/synch.h \
+  machine/spl.h machine/pcb.h ../../include/dev.h machine/bus.h \
+  machine/vm.h ../../dev/lamebus/lamebus.h autoconf.h
+interrupt.o: ../../arch/mips/mips/interrupt.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h machine/bus.h machine/vm.h ../../dev/lamebus/lamebus.h \
+  machine/spl.h machine/pcb.h
+pcb.o: ../../arch/mips/mips/pcb.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  machine/pcb.h machine/spl.h machine/switchframe.h \
+  ../../include/thread.h
+ram.o: ../../arch/mips/mips/ram.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/vm.h machine/vm.h machine/pcb.h
+spl.o: ../../arch/mips/mips/spl.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  machine/spl.h machine/specialreg.h
+start.o: ../../arch/mips/mips/start.S machine/asmdefs.h \
+  machine/specialreg.h
+switch.o: ../../arch/mips/mips/switch.S machine/asmdefs.h
+syscall.o: ../../arch/mips/mips/syscall.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h machine/pcb.h machine/spl.h \
+  machine/trapframe.h ../../include/kern/callno.h ../../include/syscall.h
+threadstart.o: ../../arch/mips/mips/threadstart.S machine/asmdefs.h
+trap.o: ../../arch/mips/mips/trap.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  machine/trapframe.h machine/specialreg.h machine/pcb.h machine/spl.h \
+  ../../include/vm.h machine/vm.h ../../include/thread.h \
+  ../../include/curthread.h
+tlb_mips1.o: ../../arch/mips/mips/tlb_mips1.S machine/asmdefs.h \
+  machine/specialreg.h
+mips-setjmp.o: ../../../lib/libc/mips-setjmp.S machine/asmdefs.h
+copyinout.o: ../../lib/copyinout.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h machine/pcb.h ../../include/vm.h \
+  machine/vm.h ../../include/thread.h ../../include/curthread.h
+array.o: ../../lib/array.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h ../../include/array.h
+bitmap.o: ../../lib/bitmap.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/kern/errno.h ../../include/bitmap.h
+queue.o: ../../lib/queue.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h ../../include/queue.h
+kheap.o: ../../lib/kheap.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/vm.h machine/vm.h machine/spl.h
+kprintf.o: ../../lib/kprintf.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/stdarg.h ../../include/lib.h \
+  machine/setjmp.h ../../include/kern/unistd.h ../../include/synch.h \
+  ../../include/vfs.h ../../include/thread.h machine/pcb.h machine/spl.h
+kgets.o: ../../lib/kgets.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h
+misc.o: ../../lib/misc.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errmsg.h \
+  ../../include/lib.h machine/setjmp.h
+ntoh.o: ../../lib/ntoh.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h
+__printf.o: ../../../lib/libc/__printf.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../include/stdarg.h
+snprintf.o: ../../../lib/libc/snprintf.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../include/stdarg.h
+atoi.o: ../../../lib/libc/atoi.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h
+bzero.o: ../../../lib/libc/bzero.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h
+memcpy.o: ../../../lib/libc/memcpy.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h
+memmove.o: ../../../lib/libc/memmove.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h
+strcat.o: ../../../lib/libc/strcat.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h
+strchr.o: ../../../lib/libc/strchr.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h
+strcmp.o: ../../../lib/libc/strcmp.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h
+strcpy.o: ../../../lib/libc/strcpy.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h
+strlen.o: ../../../lib/libc/strlen.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h
+strrchr.o: ../../../lib/libc/strrchr.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h
+strtok_r.o: ../../../lib/libc/strtok_r.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h
+init.o: ../../dev/init.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  machine/spl.h ../../include/dev.h autoconf.h
+device.o: ../../fs/vfs/device.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/synch.h ../../include/kern/errno.h \
+  ../../include/kern/unistd.h ../../include/kern/stat.h \
+  ../../include/vnode.h ../../include/uio.h ../../include/dev.h
+vfscwd.o: ../../fs/vfs/vfscwd.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/synch.h ../../include/kern/errno.h \
+  ../../include/kern/stat.h ../../include/vfs.h ../../include/fs.h \
+  ../../include/vnode.h ../../include/uio.h ../../include/thread.h \
+  machine/pcb.h ../../include/curthread.h
+vfslist.o: ../../fs/vfs/vfslist.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/synch.h ../../include/array.h ../../include/kern/errno.h \
+  ../../include/vfs.h ../../include/vnode.h ../../include/fs.h \
+  ../../include/dev.h
+vfslookup.o: ../../fs/vfs/vfslookup.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/kern/limits.h ../../include/lib.h machine/setjmp.h \
+  ../../include/synch.h ../../include/vfs.h ../../include/vnode.h \
+  ../../include/fs.h
+vfspath.o: ../../fs/vfs/vfspath.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/kern/limits.h ../../include/kern/unistd.h \
+  ../../include/vfs.h ../../include/vnode.h ../../include/lib.h \
+  machine/setjmp.h
+vnode.o: ../../fs/vfs/vnode.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h ../../include/synch.h \
+  ../../include/vnode.h
+devnull.o: ../../fs/vfs/devnull.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h ../../include/vfs.h \
+  ../../include/dev.h ../../include/uio.h
+hardclock.o: ../../thread/hardclock.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h machine/spl.h ../../include/thread.h machine/pcb.h \
+  ../../include/clock.h opt-synchprobs.h
+synch.o: ../../thread/synch.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/synch.h ../../include/thread.h machine/pcb.h \
+  ../../include/curthread.h machine/spl.h
+scheduler.o: ../../thread/scheduler.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../include/scheduler.h ../../include/thread.h \
+  machine/pcb.h machine/spl.h ../../include/queue.h
+thread.o: ../../thread/thread.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/kern/errno.h ../../include/array.h machine/spl.h \
+  machine/pcb.h ../../include/thread.h ../../include/curthread.h \
+  ../../include/scheduler.h ../../include/addrspace.h ../../include/vm.h \
+  machine/vm.h opt-dumbvm.h ../../include/vnode.h opt-synchprobs.h
+main.o: ../../main/main.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/kern/unistd.h ../../include/lib.h machine/setjmp.h \
+  machine/spl.h ../../include/test.h ../../include/synch.h \
+  ../../include/thread.h machine/pcb.h ../../include/scheduler.h \
+  ../../include/dev.h ../../include/vfs.h ../../include/vm.h machine/vm.h \
+  ../../include/syscall.h ../../include/version.h
+menu.o: ../../main/menu.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/kern/unistd.h ../../include/kern/limits.h \
+  ../../include/lib.h machine/setjmp.h ../../include/clock.h \
+  opt-synchprobs.h ../../include/thread.h machine/pcb.h \
+  ../../include/syscall.h ../../include/uio.h ../../include/vfs.h \
+  ../../include/sfs.h ../../include/vnode.h ../../include/fs.h \
+  ../../include/kern/sfs.h ../../include/test.h opt-synchprobs.h \
+  opt-sfs.h opt-net.h
+loadelf.o: ../../userprog/loadelf.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/lib.h machine/setjmp.h ../../include/uio.h \
+  ../../include/elf.h ../../include/addrspace.h ../../include/vm.h \
+  machine/vm.h opt-dumbvm.h ../../include/thread.h machine/pcb.h \
+  ../../include/curthread.h ../../include/vnode.h
+runprogram.o: ../../userprog/runprogram.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/kern/unistd.h \
+  ../../include/kern/errno.h ../../include/lib.h machine/setjmp.h \
+  ../../include/addrspace.h ../../include/vm.h machine/vm.h opt-dumbvm.h \
+  ../../include/thread.h machine/pcb.h ../../include/curthread.h \
+  ../../include/vfs.h ../../include/test.h
+uio.o: ../../userprog/uio.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/uio.h ../../include/thread.h machine/pcb.h \
+  ../../include/curthread.h
+arraytest.o: ../../test/arraytest.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/array.h ../../include/test.h
+bitmaptest.o: ../../test/bitmaptest.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../include/bitmap.h ../../include/test.h
+queuetest.o: ../../test/queuetest.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/queue.h ../../include/test.h
+threadtest.o: ../../test/threadtest.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../include/synch.h ../../include/thread.h \
+  machine/pcb.h ../../include/test.h
+tt3.o: ../../test/tt3.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  machine/spl.h ../../include/synch.h ../../include/thread.h \
+  machine/pcb.h ../../include/test.h opt-synchprobs.h
+synchtest.o: ../../test/synchtest.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/lib.h machine/setjmp.h \
+  ../../include/synch.h ../../include/thread.h machine/pcb.h \
+  ../../include/test.h ../../include/clock.h opt-synchprobs.h
+malloctest.o: ../../test/malloctest.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../include/synch.h ../../include/thread.h \
+  machine/pcb.h ../../include/test.h
+fstest.o: ../../test/fstest.c ../../include/types.h machine/types.h \
+  ../../include/kern/types.h ../../include/kern/errno.h \
+  ../../include/kern/unistd.h ../../include/lib.h machine/setjmp.h \
+  ../../include/synch.h ../../include/fs.h ../../include/vnode.h \
+  ../../include/vfs.h ../../include/uio.h ../../include/test.h \
+  ../../include/thread.h machine/pcb.h
+autoconf.o: ../../compile/ASST1/autoconf.c ../../include/types.h \
+  machine/types.h ../../include/kern/types.h ../../include/lib.h \
+  machine/setjmp.h ../../compile/ASST1/autoconf.h
diff --git a/src/kern/compile/ASST1/device.o b/src/kern/compile/ASST1/device.o
new file mode 100644
index 0000000..de09ff1
Binary files /dev/null and b/src/kern/compile/ASST1/device.o differ
diff --git a/src/kern/compile/ASST1/devnull.o b/src/kern/compile/ASST1/devnull.o
new file mode 100644
index 0000000..a54585c
Binary files /dev/null and b/src/kern/compile/ASST1/devnull.o differ
diff --git a/src/kern/compile/ASST1/dumbvm.o b/src/kern/compile/ASST1/dumbvm.o
new file mode 100644
index 0000000..3b1a19b
Binary files /dev/null and b/src/kern/compile/ASST1/dumbvm.o differ
diff --git a/src/kern/compile/ASST1/emu.o b/src/kern/compile/ASST1/emu.o
new file mode 100644
index 0000000..737ba29
Binary files /dev/null and b/src/kern/compile/ASST1/emu.o differ
diff --git a/src/kern/compile/ASST1/emu_att.o b/src/kern/compile/ASST1/emu_att.o
new file mode 100644
index 0000000..f43eb1c
Binary files /dev/null and b/src/kern/compile/ASST1/emu_att.o differ
diff --git a/src/kern/compile/ASST1/exception.o b/src/kern/compile/ASST1/exception.o
new file mode 100644
index 0000000..c2e0e7a
Binary files /dev/null and b/src/kern/compile/ASST1/exception.o differ
diff --git a/src/kern/compile/ASST1/files.mk b/src/kern/compile/ASST1/files.mk
new file mode 100644
index 0000000..8dd55ce
--- /dev/null
+++ b/src/kern/compile/ASST1/files.mk
@@ -0,0 +1,461 @@
+# Automatically generated by config; do not edit
+lhd.o: ${S}/dev/lamebus/lhd.c
+	${COMPILE.c} ${S}/dev/lamebus/lhd.c
+SRCS+=${S}/dev/lamebus/lhd.c
+OBJS+=lhd.o
+
+emu.o: ${S}/dev/lamebus/emu.c
+	${COMPILE.c} ${S}/dev/lamebus/emu.c
+SRCS+=${S}/dev/lamebus/emu.c
+OBJS+=emu.o
+
+random.o: ${S}/dev/generic/random.c
+	${COMPILE.c} ${S}/dev/generic/random.c
+SRCS+=${S}/dev/generic/random.c
+OBJS+=random.o
+
+rtclock.o: ${S}/dev/generic/rtclock.c
+	${COMPILE.c} ${S}/dev/generic/rtclock.c
+SRCS+=${S}/dev/generic/rtclock.c
+OBJS+=rtclock.o
+
+pseudorand.o: ${S}/dev/generic/pseudorand.c
+	${COMPILE.c} ${S}/dev/generic/pseudorand.c
+SRCS+=${S}/dev/generic/pseudorand.c
+OBJS+=pseudorand.o
+
+ltrace.o: ${S}/dev/lamebus/ltrace.c
+	${COMPILE.c} ${S}/dev/lamebus/ltrace.c
+SRCS+=${S}/dev/lamebus/ltrace.c
+OBJS+=ltrace.o
+
+lamebus.o: ${S}/dev/lamebus/lamebus.c
+	${COMPILE.c} ${S}/dev/lamebus/lamebus.c
+SRCS+=${S}/dev/lamebus/lamebus.c
+OBJS+=lamebus.o
+
+console.o: ${S}/dev/generic/console.c
+	${COMPILE.c} ${S}/dev/generic/console.c
+SRCS+=${S}/dev/generic/console.c
+OBJS+=console.o
+
+lser.o: ${S}/dev/lamebus/lser.c
+	${COMPILE.c} ${S}/dev/lamebus/lser.c
+SRCS+=${S}/dev/lamebus/lser.c
+OBJS+=lser.o
+
+beep.o: ${S}/dev/generic/beep.c
+	${COMPILE.c} ${S}/dev/generic/beep.c
+SRCS+=${S}/dev/generic/beep.c
+OBJS+=beep.o
+
+lrandom.o: ${S}/dev/lamebus/lrandom.c
+	${COMPILE.c} ${S}/dev/lamebus/lrandom.c
+SRCS+=${S}/dev/lamebus/lrandom.c
+OBJS+=lrandom.o
+
+ltimer.o: ${S}/dev/lamebus/ltimer.c
+	${COMPILE.c} ${S}/dev/lamebus/ltimer.c
+SRCS+=${S}/dev/lamebus/ltimer.c
+OBJS+=ltimer.o
+
+rtclock_ltimer.o: ${S}/dev/lamebus/rtclock_ltimer.c
+	${COMPILE.c} ${S}/dev/lamebus/rtclock_ltimer.c
+SRCS+=${S}/dev/lamebus/rtclock_ltimer.c
+OBJS+=rtclock_ltimer.o
+
+emu_att.o: ${S}/dev/lamebus/emu_att.c
+	${COMPILE.c} ${S}/dev/lamebus/emu_att.c
+SRCS+=${S}/dev/lamebus/emu_att.c
+OBJS+=emu_att.o
+
+random_lrandom.o: ${S}/dev/lamebus/random_lrandom.c
+	${COMPILE.c} ${S}/dev/lamebus/random_lrandom.c
+SRCS+=${S}/dev/lamebus/random_lrandom.c
+OBJS+=random_lrandom.o
+
+beep_ltimer.o: ${S}/dev/lamebus/beep_ltimer.c
+	${COMPILE.c} ${S}/dev/lamebus/beep_ltimer.c
+SRCS+=${S}/dev/lamebus/beep_ltimer.c
+OBJS+=beep_ltimer.o
+
+ltrace_att.o: ${S}/dev/lamebus/ltrace_att.c
+	${COMPILE.c} ${S}/dev/lamebus/ltrace_att.c
+SRCS+=${S}/dev/lamebus/ltrace_att.c
+OBJS+=ltrace_att.o
+
+pseudorand_att.o: ${S}/dev/generic/pseudorand_att.c
+	${COMPILE.c} ${S}/dev/generic/pseudorand_att.c
+SRCS+=${S}/dev/generic/pseudorand_att.c
+OBJS+=pseudorand_att.o
+
+con_lser.o: ${S}/dev/lamebus/con_lser.c
+	${COMPILE.c} ${S}/dev/lamebus/con_lser.c
+SRCS+=${S}/dev/lamebus/con_lser.c
+OBJS+=con_lser.o
+
+lrandom_att.o: ${S}/dev/lamebus/lrandom_att.c
+	${COMPILE.c} ${S}/dev/lamebus/lrandom_att.c
+SRCS+=${S}/dev/lamebus/lrandom_att.c
+OBJS+=lrandom_att.o
+
+lser_att.o: ${S}/dev/lamebus/lser_att.c
+	${COMPILE.c} ${S}/dev/lamebus/lser_att.c
+SRCS+=${S}/dev/lamebus/lser_att.c
+OBJS+=lser_att.o
+
+lhd_att.o: ${S}/dev/lamebus/lhd_att.c
+	${COMPILE.c} ${S}/dev/lamebus/lhd_att.c
+SRCS+=${S}/dev/lamebus/lhd_att.c
+OBJS+=lhd_att.o
+
+ltimer_att.o: ${S}/dev/lamebus/ltimer_att.c
+	${COMPILE.c} ${S}/dev/lamebus/ltimer_att.c
+SRCS+=${S}/dev/lamebus/ltimer_att.c
+OBJS+=ltimer_att.o
+
+sfs_io.o: ${S}/fs/sfs/sfs_io.c
+	${COMPILE.c} ${S}/fs/sfs/sfs_io.c
+SRCS+=${S}/fs/sfs/sfs_io.c
+OBJS+=sfs_io.o
+
+sfs_fs.o: ${S}/fs/sfs/sfs_fs.c
+	${COMPILE.c} ${S}/fs/sfs/sfs_fs.c
+SRCS+=${S}/fs/sfs/sfs_fs.c
+OBJS+=sfs_fs.o
+
+sfs_vnode.o: ${S}/fs/sfs/sfs_vnode.c
+	${COMPILE.c} ${S}/fs/sfs/sfs_vnode.c
+SRCS+=${S}/fs/sfs/sfs_vnode.c
+OBJS+=sfs_vnode.o
+
+stoplight.o: ${S}/asst1/stoplight.c
+	${COMPILE.c} ${S}/asst1/stoplight.c
+SRCS+=${S}/asst1/stoplight.c
+OBJS+=stoplight.o
+
+dumbvm.o: ${S}/arch/mips/mips/dumbvm.c
+	${COMPILE.c} ${S}/arch/mips/mips/dumbvm.c
+SRCS+=${S}/arch/mips/mips/dumbvm.c
+OBJS+=dumbvm.o
+
+catlock.o: ${S}/asst1/catlock.c
+	${COMPILE.c} ${S}/asst1/catlock.c
+SRCS+=${S}/asst1/catlock.c
+OBJS+=catlock.o
+
+catsem.o: ${S}/asst1/catsem.c
+	${COMPILE.c} ${S}/asst1/catsem.c
+SRCS+=${S}/asst1/catsem.c
+OBJS+=catsem.o
+
+cache_mips1.o: ${S}/arch/mips/mips/cache_mips1.S
+	${COMPILE.S} ${S}/arch/mips/mips/cache_mips1.S
+SRCS+=${S}/arch/mips/mips/cache_mips1.S
+OBJS+=cache_mips1.o
+
+exception.o: ${S}/arch/mips/mips/exception.S
+	${COMPILE.S} ${S}/arch/mips/mips/exception.S
+SRCS+=${S}/arch/mips/mips/exception.S
+OBJS+=exception.o
+
+lamebus_mips.o: ${S}/arch/mips/mips/lamebus_mips.c
+	${COMPILE.c} ${S}/arch/mips/mips/lamebus_mips.c
+SRCS+=${S}/arch/mips/mips/lamebus_mips.c
+OBJS+=lamebus_mips.o
+
+interrupt.o: ${S}/arch/mips/mips/interrupt.c
+	${COMPILE.c} ${S}/arch/mips/mips/interrupt.c
+SRCS+=${S}/arch/mips/mips/interrupt.c
+OBJS+=interrupt.o
+
+pcb.o: ${S}/arch/mips/mips/pcb.c
+	${COMPILE.c} ${S}/arch/mips/mips/pcb.c
+SRCS+=${S}/arch/mips/mips/pcb.c
+OBJS+=pcb.o
+
+ram.o: ${S}/arch/mips/mips/ram.c
+	${COMPILE.c} ${S}/arch/mips/mips/ram.c
+SRCS+=${S}/arch/mips/mips/ram.c
+OBJS+=ram.o
+
+spl.o: ${S}/arch/mips/mips/spl.c
+	${COMPILE.c} ${S}/arch/mips/mips/spl.c
+SRCS+=${S}/arch/mips/mips/spl.c
+OBJS+=spl.o
+
+start.o: ${S}/arch/mips/mips/start.S
+	${COMPILE.S} ${S}/arch/mips/mips/start.S
+SRCS+=${S}/arch/mips/mips/start.S
+OBJS+=start.o
+
+switch.o: ${S}/arch/mips/mips/switch.S
+	${COMPILE.S} ${S}/arch/mips/mips/switch.S
+SRCS+=${S}/arch/mips/mips/switch.S
+OBJS+=switch.o
+
+syscall.o: ${S}/arch/mips/mips/syscall.c
+	${COMPILE.c} ${S}/arch/mips/mips/syscall.c
+SRCS+=${S}/arch/mips/mips/syscall.c
+OBJS+=syscall.o
+
+threadstart.o: ${S}/arch/mips/mips/threadstart.S
+	${COMPILE.S} ${S}/arch/mips/mips/threadstart.S
+SRCS+=${S}/arch/mips/mips/threadstart.S
+OBJS+=threadstart.o
+
+trap.o: ${S}/arch/mips/mips/trap.c
+	${COMPILE.c} ${S}/arch/mips/mips/trap.c
+SRCS+=${S}/arch/mips/mips/trap.c
+OBJS+=trap.o
+
+tlb_mips1.o: ${S}/arch/mips/mips/tlb_mips1.S
+	${COMPILE.S} ${S}/arch/mips/mips/tlb_mips1.S
+SRCS+=${S}/arch/mips/mips/tlb_mips1.S
+OBJS+=tlb_mips1.o
+
+mips-setjmp.o: ${S}/../lib/libc/mips-setjmp.S
+	${COMPILE.S} ${S}/../lib/libc/mips-setjmp.S
+SRCS+=${S}/../lib/libc/mips-setjmp.S
+OBJS+=mips-setjmp.o
+
+copyinout.o: ${S}/lib/copyinout.c
+	${COMPILE.c} ${S}/lib/copyinout.c
+SRCS+=${S}/lib/copyinout.c
+OBJS+=copyinout.o
+
+array.o: ${S}/lib/array.c
+	${COMPILE.c} ${S}/lib/array.c
+SRCS+=${S}/lib/array.c
+OBJS+=array.o
+
+bitmap.o: ${S}/lib/bitmap.c
+	${COMPILE.c} ${S}/lib/bitmap.c
+SRCS+=${S}/lib/bitmap.c
+OBJS+=bitmap.o
+
+queue.o: ${S}/lib/queue.c
+	${COMPILE.c} ${S}/lib/queue.c
+SRCS+=${S}/lib/queue.c
+OBJS+=queue.o
+
+kheap.o: ${S}/lib/kheap.c
+	${COMPILE.c} ${S}/lib/kheap.c
+SRCS+=${S}/lib/kheap.c
+OBJS+=kheap.o
+
+kprintf.o: ${S}/lib/kprintf.c
+	${COMPILE.c} ${S}/lib/kprintf.c
+SRCS+=${S}/lib/kprintf.c
+OBJS+=kprintf.o
+
+kgets.o: ${S}/lib/kgets.c
+	${COMPILE.c} ${S}/lib/kgets.c
+SRCS+=${S}/lib/kgets.c
+OBJS+=kgets.o
+
+misc.o: ${S}/lib/misc.c
+	${COMPILE.c} ${S}/lib/misc.c
+SRCS+=${S}/lib/misc.c
+OBJS+=misc.o
+
+ntoh.o: ${S}/lib/ntoh.c
+	${COMPILE.c} ${S}/lib/ntoh.c
+SRCS+=${S}/lib/ntoh.c
+OBJS+=ntoh.o
+
+__printf.o: ${S}/../lib/libc/__printf.c
+	${COMPILE.c} ${S}/../lib/libc/__printf.c
+SRCS+=${S}/../lib/libc/__printf.c
+OBJS+=__printf.o
+
+snprintf.o: ${S}/../lib/libc/snprintf.c
+	${COMPILE.c} ${S}/../lib/libc/snprintf.c
+SRCS+=${S}/../lib/libc/snprintf.c
+OBJS+=snprintf.o
+
+atoi.o: ${S}/../lib/libc/atoi.c
+	${COMPILE.c} ${S}/../lib/libc/atoi.c
+SRCS+=${S}/../lib/libc/atoi.c
+OBJS+=atoi.o
+
+bzero.o: ${S}/../lib/libc/bzero.c
+	${COMPILE.c} ${S}/../lib/libc/bzero.c
+SRCS+=${S}/../lib/libc/bzero.c
+OBJS+=bzero.o
+
+memcpy.o: ${S}/../lib/libc/memcpy.c
+	${COMPILE.c} ${S}/../lib/libc/memcpy.c
+SRCS+=${S}/../lib/libc/memcpy.c
+OBJS+=memcpy.o
+
+memmove.o: ${S}/../lib/libc/memmove.c
+	${COMPILE.c} ${S}/../lib/libc/memmove.c
+SRCS+=${S}/../lib/libc/memmove.c
+OBJS+=memmove.o
+
+strcat.o: ${S}/../lib/libc/strcat.c
+	${COMPILE.c} ${S}/../lib/libc/strcat.c
+SRCS+=${S}/../lib/libc/strcat.c
+OBJS+=strcat.o
+
+strchr.o: ${S}/../lib/libc/strchr.c
+	${COMPILE.c} ${S}/../lib/libc/strchr.c
+SRCS+=${S}/../lib/libc/strchr.c
+OBJS+=strchr.o
+
+strcmp.o: ${S}/../lib/libc/strcmp.c
+	${COMPILE.c} ${S}/../lib/libc/strcmp.c
+SRCS+=${S}/../lib/libc/strcmp.c
+OBJS+=strcmp.o
+
+strcpy.o: ${S}/../lib/libc/strcpy.c
+	${COMPILE.c} ${S}/../lib/libc/strcpy.c
+SRCS+=${S}/../lib/libc/strcpy.c
+OBJS+=strcpy.o
+
+strlen.o: ${S}/../lib/libc/strlen.c
+	${COMPILE.c} ${S}/../lib/libc/strlen.c
+SRCS+=${S}/../lib/libc/strlen.c
+OBJS+=strlen.o
+
+strrchr.o: ${S}/../lib/libc/strrchr.c
+	${COMPILE.c} ${S}/../lib/libc/strrchr.c
+SRCS+=${S}/../lib/libc/strrchr.c
+OBJS+=strrchr.o
+
+strtok_r.o: ${S}/../lib/libc/strtok_r.c
+	${COMPILE.c} ${S}/../lib/libc/strtok_r.c
+SRCS+=${S}/../lib/libc/strtok_r.c
+OBJS+=strtok_r.o
+
+init.o: ${S}/dev/init.c
+	${COMPILE.c} ${S}/dev/init.c
+SRCS+=${S}/dev/init.c
+OBJS+=init.o
+
+device.o: ${S}/fs/vfs/device.c
+	${COMPILE.c} ${S}/fs/vfs/device.c
+SRCS+=${S}/fs/vfs/device.c
+OBJS+=device.o
+
+vfscwd.o: ${S}/fs/vfs/vfscwd.c
+	${COMPILE.c} ${S}/fs/vfs/vfscwd.c
+SRCS+=${S}/fs/vfs/vfscwd.c
+OBJS+=vfscwd.o
+
+vfslist.o: ${S}/fs/vfs/vfslist.c
+	${COMPILE.c} ${S}/fs/vfs/vfslist.c
+SRCS+=${S}/fs/vfs/vfslist.c
+OBJS+=vfslist.o
+
+vfslookup.o: ${S}/fs/vfs/vfslookup.c
+	${COMPILE.c} ${S}/fs/vfs/vfslookup.c
+SRCS+=${S}/fs/vfs/vfslookup.c
+OBJS+=vfslookup.o
+
+vfspath.o: ${S}/fs/vfs/vfspath.c
+	${COMPILE.c} ${S}/fs/vfs/vfspath.c
+SRCS+=${S}/fs/vfs/vfspath.c
+OBJS+=vfspath.o
+
+vnode.o: ${S}/fs/vfs/vnode.c
+	${COMPILE.c} ${S}/fs/vfs/vnode.c
+SRCS+=${S}/fs/vfs/vnode.c
+OBJS+=vnode.o
+
+devnull.o: ${S}/fs/vfs/devnull.c
+	${COMPILE.c} ${S}/fs/vfs/devnull.c
+SRCS+=${S}/fs/vfs/devnull.c
+OBJS+=devnull.o
+
+hardclock.o: ${S}/thread/hardclock.c
+	${COMPILE.c} ${S}/thread/hardclock.c
+SRCS+=${S}/thread/hardclock.c
+OBJS+=hardclock.o
+
+synch.o: ${S}/thread/synch.c
+	${COMPILE.c} ${S}/thread/synch.c
+SRCS+=${S}/thread/synch.c
+OBJS+=synch.o
+
+scheduler.o: ${S}/thread/scheduler.c
+	${COMPILE.c} ${S}/thread/scheduler.c
+SRCS+=${S}/thread/scheduler.c
+OBJS+=scheduler.o
+
+thread.o: ${S}/thread/thread.c
+	${COMPILE.c} ${S}/thread/thread.c
+SRCS+=${S}/thread/thread.c
+OBJS+=thread.o
+
+main.o: ${S}/main/main.c
+	${COMPILE.c} ${S}/main/main.c
+SRCS+=${S}/main/main.c
+OBJS+=main.o
+
+menu.o: ${S}/main/menu.c
+	${COMPILE.c} ${S}/main/menu.c
+SRCS+=${S}/main/menu.c
+OBJS+=menu.o
+
+loadelf.o: ${S}/userprog/loadelf.c
+	${COMPILE.c} ${S}/userprog/loadelf.c
+SRCS+=${S}/userprog/loadelf.c
+OBJS+=loadelf.o
+
+runprogram.o: ${S}/userprog/runprogram.c
+	${COMPILE.c} ${S}/userprog/runprogram.c
+SRCS+=${S}/userprog/runprogram.c
+OBJS+=runprogram.o
+
+uio.o: ${S}/userprog/uio.c
+	${COMPILE.c} ${S}/userprog/uio.c
+SRCS+=${S}/userprog/uio.c
+OBJS+=uio.o
+
+arraytest.o: ${S}/test/arraytest.c
+	${COMPILE.c} ${S}/test/arraytest.c
+SRCS+=${S}/test/arraytest.c
+OBJS+=arraytest.o
+
+bitmaptest.o: ${S}/test/bitmaptest.c
+	${COMPILE.c} ${S}/test/bitmaptest.c
+SRCS+=${S}/test/bitmaptest.c
+OBJS+=bitmaptest.o
+
+queuetest.o: ${S}/test/queuetest.c
+	${COMPILE.c} ${S}/test/queuetest.c
+SRCS+=${S}/test/queuetest.c
+OBJS+=queuetest.o
+
+threadtest.o: ${S}/test/threadtest.c
+	${COMPILE.c} ${S}/test/threadtest.c
+SRCS+=${S}/test/threadtest.c
+OBJS+=threadtest.o
+
+tt3.o: ${S}/test/tt3.c
+	${COMPILE.c} ${S}/test/tt3.c
+SRCS+=${S}/test/tt3.c
+OBJS+=tt3.o
+
+synchtest.o: ${S}/test/synchtest.c
+	${COMPILE.c} ${S}/test/synchtest.c
+SRCS+=${S}/test/synchtest.c
+OBJS+=synchtest.o
+
+malloctest.o: ${S}/test/malloctest.c
+	${COMPILE.c} ${S}/test/malloctest.c
+SRCS+=${S}/test/malloctest.c
+OBJS+=malloctest.o
+
+fstest.o: ${S}/test/fstest.c
+	${COMPILE.c} ${S}/test/fstest.c
+SRCS+=${S}/test/fstest.c
+OBJS+=fstest.o
+
+autoconf.o: ${S}/compile/ASST1/autoconf.c
+	${COMPILE.c} ${S}/compile/ASST1/autoconf.c
+SRCS+=${S}/compile/ASST1/autoconf.c
+OBJS+=autoconf.o
+
diff --git a/src/kern/compile/ASST1/fstest.o b/src/kern/compile/ASST1/fstest.o
new file mode 100644
index 0000000..c0581da
Binary files /dev/null and b/src/kern/compile/ASST1/fstest.o differ
diff --git a/src/kern/compile/ASST1/hardclock.o b/src/kern/compile/ASST1/hardclock.o
new file mode 100644
index 0000000..b03a525
Binary files /dev/null and b/src/kern/compile/ASST1/hardclock.o differ
diff --git a/src/kern/compile/ASST1/init.o b/src/kern/compile/ASST1/init.o
new file mode 100644
index 0000000..7176fd2
Binary files /dev/null and b/src/kern/compile/ASST1/init.o differ
diff --git a/src/kern/compile/ASST1/interrupt.o b/src/kern/compile/ASST1/interrupt.o
new file mode 100644
index 0000000..cd02c3e
Binary files /dev/null and b/src/kern/compile/ASST1/interrupt.o differ
diff --git a/src/kern/compile/ASST1/kernel b/src/kern/compile/ASST1/kernel
new file mode 100755
index 0000000..b77968f
Binary files /dev/null and b/src/kern/compile/ASST1/kernel differ
diff --git a/src/kern/compile/ASST1/kgets.o b/src/kern/compile/ASST1/kgets.o
new file mode 100644
index 0000000..9f51aa1
Binary files /dev/null and b/src/kern/compile/ASST1/kgets.o differ
diff --git a/src/kern/compile/ASST1/kheap.o b/src/kern/compile/ASST1/kheap.o
new file mode 100644
index 0000000..fb2dbff
Binary files /dev/null and b/src/kern/compile/ASST1/kheap.o differ
diff --git a/src/kern/compile/ASST1/kprintf.o b/src/kern/compile/ASST1/kprintf.o
new file mode 100644
index 0000000..15cc541
Binary files /dev/null and b/src/kern/compile/ASST1/kprintf.o differ
diff --git a/src/kern/compile/ASST1/lamebus.o b/src/kern/compile/ASST1/lamebus.o
new file mode 100644
index 0000000..db7bef2
Binary files /dev/null and b/src/kern/compile/ASST1/lamebus.o differ
diff --git a/src/kern/compile/ASST1/lamebus_mips.o b/src/kern/compile/ASST1/lamebus_mips.o
new file mode 100644
index 0000000..1d73baa
Binary files /dev/null and b/src/kern/compile/ASST1/lamebus_mips.o differ
diff --git a/src/kern/compile/ASST1/lhd.o b/src/kern/compile/ASST1/lhd.o
new file mode 100644
index 0000000..4147ebe
Binary files /dev/null and b/src/kern/compile/ASST1/lhd.o differ
diff --git a/src/kern/compile/ASST1/lhd_att.o b/src/kern/compile/ASST1/lhd_att.o
new file mode 100644
index 0000000..3301744
Binary files /dev/null and b/src/kern/compile/ASST1/lhd_att.o differ
diff --git a/src/kern/compile/ASST1/loadelf.o b/src/kern/compile/ASST1/loadelf.o
new file mode 100644
index 0000000..3fa396f
Binary files /dev/null and b/src/kern/compile/ASST1/loadelf.o differ
diff --git a/src/kern/compile/ASST1/lrandom.o b/src/kern/compile/ASST1/lrandom.o
new file mode 100644
index 0000000..4f68d60
Binary files /dev/null and b/src/kern/compile/ASST1/lrandom.o differ
diff --git a/src/kern/compile/ASST1/lrandom_att.o b/src/kern/compile/ASST1/lrandom_att.o
new file mode 100644
index 0000000..ae843ff
Binary files /dev/null and b/src/kern/compile/ASST1/lrandom_att.o differ
diff --git a/src/kern/compile/ASST1/lser.o b/src/kern/compile/ASST1/lser.o
new file mode 100644
index 0000000..ef056bd
Binary files /dev/null and b/src/kern/compile/ASST1/lser.o differ
diff --git a/src/kern/compile/ASST1/lser_att.o b/src/kern/compile/ASST1/lser_att.o
new file mode 100644
index 0000000..2a079dd
Binary files /dev/null and b/src/kern/compile/ASST1/lser_att.o differ
diff --git a/src/kern/compile/ASST1/ltimer.o b/src/kern/compile/ASST1/ltimer.o
new file mode 100644
index 0000000..ab5cdc3
Binary files /dev/null and b/src/kern/compile/ASST1/ltimer.o differ
diff --git a/src/kern/compile/ASST1/ltimer_att.o b/src/kern/compile/ASST1/ltimer_att.o
new file mode 100644
index 0000000..676bd82
Binary files /dev/null and b/src/kern/compile/ASST1/ltimer_att.o differ
diff --git a/src/kern/compile/ASST1/ltrace.o b/src/kern/compile/ASST1/ltrace.o
new file mode 100644
index 0000000..610bb29
Binary files /dev/null and b/src/kern/compile/ASST1/ltrace.o differ
diff --git a/src/kern/compile/ASST1/ltrace_att.o b/src/kern/compile/ASST1/ltrace_att.o
new file mode 100644
index 0000000..40260db
Binary files /dev/null and b/src/kern/compile/ASST1/ltrace_att.o differ
diff --git a/src/kern/compile/ASST1/machine b/src/kern/compile/ASST1/machine
new file mode 120000
index 0000000..c12f325
--- /dev/null
+++ b/src/kern/compile/ASST1/machine
@@ -0,0 +1 @@
+../../arch/mips/include
\ No newline at end of file
diff --git a/src/kern/compile/ASST1/main.o b/src/kern/compile/ASST1/main.o
new file mode 100644
index 0000000..e27e487
Binary files /dev/null and b/src/kern/compile/ASST1/main.o differ
diff --git a/src/kern/compile/ASST1/malloctest.o b/src/kern/compile/ASST1/malloctest.o
new file mode 100644
index 0000000..4798af8
Binary files /dev/null and b/src/kern/compile/ASST1/malloctest.o differ
diff --git a/src/kern/compile/ASST1/memcpy.o b/src/kern/compile/ASST1/memcpy.o
new file mode 100644
index 0000000..971ac90
Binary files /dev/null and b/src/kern/compile/ASST1/memcpy.o differ
diff --git a/src/kern/compile/ASST1/memmove.o b/src/kern/compile/ASST1/memmove.o
new file mode 100644
index 0000000..dd823cd
Binary files /dev/null and b/src/kern/compile/ASST1/memmove.o differ
diff --git a/src/kern/compile/ASST1/menu.o b/src/kern/compile/ASST1/menu.o
new file mode 100644
index 0000000..b15a7c8
Binary files /dev/null and b/src/kern/compile/ASST1/menu.o differ
diff --git a/src/kern/compile/ASST1/mips-setjmp.o b/src/kern/compile/ASST1/mips-setjmp.o
new file mode 100644
index 0000000..0e438f0
Binary files /dev/null and b/src/kern/compile/ASST1/mips-setjmp.o differ
diff --git a/src/kern/compile/ASST1/misc.o b/src/kern/compile/ASST1/misc.o
new file mode 100644
index 0000000..ab4e5f4
Binary files /dev/null and b/src/kern/compile/ASST1/misc.o differ
diff --git a/src/kern/compile/ASST1/ntoh.o b/src/kern/compile/ASST1/ntoh.o
new file mode 100644
index 0000000..2dbe6a5
Binary files /dev/null and b/src/kern/compile/ASST1/ntoh.o differ
diff --git a/src/kern/compile/ASST1/opt-dumbvm.h b/src/kern/compile/ASST1/opt-dumbvm.h
new file mode 100644
index 0000000..7db9b01
--- /dev/null
+++ b/src/kern/compile/ASST1/opt-dumbvm.h
@@ -0,0 +1,5 @@
+/* Automatically generated; do not edit */
+#ifndef _OPT_DUMBVM_H_
+#define _OPT_DUMBVM_H_
+#define OPT_DUMBVM 1
+#endif /* _OPT_DUMBVM_H_ */
diff --git a/src/kern/compile/ASST1/opt-net.h b/src/kern/compile/ASST1/opt-net.h
new file mode 100644
index 0000000..0340a83
--- /dev/null
+++ b/src/kern/compile/ASST1/opt-net.h
@@ -0,0 +1,5 @@
+/* Automatically generated; do not edit */
+#ifndef _OPT_NET_H_
+#define _OPT_NET_H_
+#define OPT_NET 0
+#endif /* _OPT_NET_H_ */
diff --git a/src/kern/compile/ASST1/opt-netfs.h b/src/kern/compile/ASST1/opt-netfs.h
new file mode 100644
index 0000000..cd21c56
--- /dev/null
+++ b/src/kern/compile/ASST1/opt-netfs.h
@@ -0,0 +1,5 @@
+/* Automatically generated; do not edit */
+#ifndef _OPT_NETFS_H_
+#define _OPT_NETFS_H_
+#define OPT_NETFS 0
+#endif /* _OPT_NETFS_H_ */
diff --git a/src/kern/compile/ASST1/opt-sfs.h b/src/kern/compile/ASST1/opt-sfs.h
new file mode 100644
index 0000000..94095ad
--- /dev/null
+++ b/src/kern/compile/ASST1/opt-sfs.h
@@ -0,0 +1,5 @@
+/* Automatically generated; do not edit */
+#ifndef _OPT_SFS_H_
+#define _OPT_SFS_H_
+#define OPT_SFS 1
+#endif /* _OPT_SFS_H_ */
diff --git a/src/kern/compile/ASST1/opt-synchprobs.h b/src/kern/compile/ASST1/opt-synchprobs.h
new file mode 100644
index 0000000..57b9186
--- /dev/null
+++ b/src/kern/compile/ASST1/opt-synchprobs.h
@@ -0,0 +1,5 @@
+/* Automatically generated; do not edit */
+#ifndef _OPT_SYNCHPROBS_H_
+#define _OPT_SYNCHPROBS_H_
+#define OPT_SYNCHPROBS 1
+#endif /* _OPT_SYNCHPROBS_H_ */
diff --git a/src/kern/compile/ASST1/pcb.o b/src/kern/compile/ASST1/pcb.o
new file mode 100644
index 0000000..a7c6727
Binary files /dev/null and b/src/kern/compile/ASST1/pcb.o differ
diff --git a/src/kern/compile/ASST1/pseudorand.o b/src/kern/compile/ASST1/pseudorand.o
new file mode 100644
index 0000000..04a07e5
Binary files /dev/null and b/src/kern/compile/ASST1/pseudorand.o differ
diff --git a/src/kern/compile/ASST1/pseudorand_att.o b/src/kern/compile/ASST1/pseudorand_att.o
new file mode 100644
index 0000000..d170ee6
Binary files /dev/null and b/src/kern/compile/ASST1/pseudorand_att.o differ
diff --git a/src/kern/compile/ASST1/queue.o b/src/kern/compile/ASST1/queue.o
new file mode 100644
index 0000000..b778545
Binary files /dev/null and b/src/kern/compile/ASST1/queue.o differ
diff --git a/src/kern/compile/ASST1/queuetest.o b/src/kern/compile/ASST1/queuetest.o
new file mode 100644
index 0000000..413c0d7
Binary files /dev/null and b/src/kern/compile/ASST1/queuetest.o differ
diff --git a/src/kern/compile/ASST1/ram.o b/src/kern/compile/ASST1/ram.o
new file mode 100644
index 0000000..df3c00d
Binary files /dev/null and b/src/kern/compile/ASST1/ram.o differ
diff --git a/src/kern/compile/ASST1/random.o b/src/kern/compile/ASST1/random.o
new file mode 100644
index 0000000..534149a
Binary files /dev/null and b/src/kern/compile/ASST1/random.o differ
diff --git a/src/kern/compile/ASST1/random_lrandom.o b/src/kern/compile/ASST1/random_lrandom.o
new file mode 100644
index 0000000..575a59b
Binary files /dev/null and b/src/kern/compile/ASST1/random_lrandom.o differ
diff --git a/src/kern/compile/ASST1/rtclock.o b/src/kern/compile/ASST1/rtclock.o
new file mode 100644
index 0000000..85dc688
Binary files /dev/null and b/src/kern/compile/ASST1/rtclock.o differ
diff --git a/src/kern/compile/ASST1/rtclock_ltimer.o b/src/kern/compile/ASST1/rtclock_ltimer.o
new file mode 100644
index 0000000..27ee5de
Binary files /dev/null and b/src/kern/compile/ASST1/rtclock_ltimer.o differ
diff --git a/src/kern/compile/ASST1/runprogram.o b/src/kern/compile/ASST1/runprogram.o
new file mode 100644
index 0000000..12cdf5b
Binary files /dev/null and b/src/kern/compile/ASST1/runprogram.o differ
diff --git a/src/kern/compile/ASST1/scheduler.o b/src/kern/compile/ASST1/scheduler.o
new file mode 100644
index 0000000..a9c639f
Binary files /dev/null and b/src/kern/compile/ASST1/scheduler.o differ
diff --git a/src/kern/compile/ASST1/sfs_fs.o b/src/kern/compile/ASST1/sfs_fs.o
new file mode 100644
index 0000000..530f9c2
Binary files /dev/null and b/src/kern/compile/ASST1/sfs_fs.o differ
diff --git a/src/kern/compile/ASST1/sfs_io.o b/src/kern/compile/ASST1/sfs_io.o
new file mode 100644
index 0000000..635e04a
Binary files /dev/null and b/src/kern/compile/ASST1/sfs_io.o differ
diff --git a/src/kern/compile/ASST1/sfs_vnode.o b/src/kern/compile/ASST1/sfs_vnode.o
new file mode 100644
index 0000000..b54620a
Binary files /dev/null and b/src/kern/compile/ASST1/sfs_vnode.o differ
diff --git a/src/kern/compile/ASST1/snprintf.o b/src/kern/compile/ASST1/snprintf.o
new file mode 100644
index 0000000..01c12f7
Binary files /dev/null and b/src/kern/compile/ASST1/snprintf.o differ
diff --git a/src/kern/compile/ASST1/spl.o b/src/kern/compile/ASST1/spl.o
new file mode 100644
index 0000000..279a617
Binary files /dev/null and b/src/kern/compile/ASST1/spl.o differ
diff --git a/src/kern/compile/ASST1/start.o b/src/kern/compile/ASST1/start.o
new file mode 100644
index 0000000..eee1d13
Binary files /dev/null and b/src/kern/compile/ASST1/start.o differ
diff --git a/src/kern/compile/ASST1/stoplight.o b/src/kern/compile/ASST1/stoplight.o
new file mode 100644
index 0000000..d5811f0
Binary files /dev/null and b/src/kern/compile/ASST1/stoplight.o differ
diff --git a/src/kern/compile/ASST1/strcat.o b/src/kern/compile/ASST1/strcat.o
new file mode 100644
index 0000000..83960be
Binary files /dev/null and b/src/kern/compile/ASST1/strcat.o differ
diff --git a/src/kern/compile/ASST1/strchr.o b/src/kern/compile/ASST1/strchr.o
new file mode 100644
index 0000000..b47f25d
Binary files /dev/null and b/src/kern/compile/ASST1/strchr.o differ
diff --git a/src/kern/compile/ASST1/strcmp.o b/src/kern/compile/ASST1/strcmp.o
new file mode 100644
index 0000000..b8b87bd
Binary files /dev/null and b/src/kern/compile/ASST1/strcmp.o differ
diff --git a/src/kern/compile/ASST1/strcpy.o b/src/kern/compile/ASST1/strcpy.o
new file mode 100644
index 0000000..e88f512
Binary files /dev/null and b/src/kern/compile/ASST1/strcpy.o differ
diff --git a/src/kern/compile/ASST1/strlen.o b/src/kern/compile/ASST1/strlen.o
new file mode 100644
index 0000000..cdfb502
Binary files /dev/null and b/src/kern/compile/ASST1/strlen.o differ
diff --git a/src/kern/compile/ASST1/strrchr.o b/src/kern/compile/ASST1/strrchr.o
new file mode 100644
index 0000000..a63f721
Binary files /dev/null and b/src/kern/compile/ASST1/strrchr.o differ
diff --git a/src/kern/compile/ASST1/strtok_r.o b/src/kern/compile/ASST1/strtok_r.o
new file mode 100644
index 0000000..54ec017
Binary files /dev/null and b/src/kern/compile/ASST1/strtok_r.o differ
diff --git a/src/kern/compile/ASST1/switch.o b/src/kern/compile/ASST1/switch.o
new file mode 100644
index 0000000..f54397d
Binary files /dev/null and b/src/kern/compile/ASST1/switch.o differ
diff --git a/src/kern/compile/ASST1/synch.o b/src/kern/compile/ASST1/synch.o
new file mode 100644
index 0000000..a77c87b
Binary files /dev/null and b/src/kern/compile/ASST1/synch.o differ
diff --git a/src/kern/compile/ASST1/synchtest.o b/src/kern/compile/ASST1/synchtest.o
new file mode 100644
index 0000000..1f4ca5b
Binary files /dev/null and b/src/kern/compile/ASST1/synchtest.o differ
diff --git a/src/kern/compile/ASST1/syscall.o b/src/kern/compile/ASST1/syscall.o
new file mode 100644
index 0000000..f1f01d9
Binary files /dev/null and b/src/kern/compile/ASST1/syscall.o differ
diff --git a/src/kern/compile/ASST1/thread.o b/src/kern/compile/ASST1/thread.o
new file mode 100644
index 0000000..3f7e6c0
Binary files /dev/null and b/src/kern/compile/ASST1/thread.o differ
diff --git a/src/kern/compile/ASST1/threadstart.o b/src/kern/compile/ASST1/threadstart.o
new file mode 100644
index 0000000..14752e1
Binary files /dev/null and b/src/kern/compile/ASST1/threadstart.o differ
diff --git a/src/kern/compile/ASST1/threadtest.o b/src/kern/compile/ASST1/threadtest.o
new file mode 100644
index 0000000..fa5424e
Binary files /dev/null and b/src/kern/compile/ASST1/threadtest.o differ
diff --git a/src/kern/compile/ASST1/tlb_mips1.o b/src/kern/compile/ASST1/tlb_mips1.o
new file mode 100644
index 0000000..8dca945
Binary files /dev/null and b/src/kern/compile/ASST1/tlb_mips1.o differ
diff --git a/src/kern/compile/ASST1/trap.o b/src/kern/compile/ASST1/trap.o
new file mode 100644
index 0000000..2d959ad
Binary files /dev/null and b/src/kern/compile/ASST1/trap.o differ
diff --git a/src/kern/compile/ASST1/tt3.o b/src/kern/compile/ASST1/tt3.o
new file mode 100644
index 0000000..0fa8b65
Binary files /dev/null and b/src/kern/compile/ASST1/tt3.o differ
diff --git a/src/kern/compile/ASST1/uio.o b/src/kern/compile/ASST1/uio.o
new file mode 100644
index 0000000..905656e
Binary files /dev/null and b/src/kern/compile/ASST1/uio.o differ
diff --git a/src/kern/compile/ASST1/vers.c b/src/kern/compile/ASST1/vers.c
new file mode 100644
index 0000000..e6d0255
--- /dev/null
+++ b/src/kern/compile/ASST1/vers.c
@@ -0,0 +1,3 @@
+/* This file is automatically generated. Edits will be lost.*/
+const int buildversion = 72;
+const char buildconfig[] = "ASST1";
diff --git a/src/kern/compile/ASST1/vers.o b/src/kern/compile/ASST1/vers.o
new file mode 100644
index 0000000..a18c1e0
Binary files /dev/null and b/src/kern/compile/ASST1/vers.o differ
diff --git a/src/kern/compile/ASST1/version b/src/kern/compile/ASST1/version
new file mode 100644
index 0000000..ea70ce0
--- /dev/null
+++ b/src/kern/compile/ASST1/version
@@ -0,0 +1 @@
+72
diff --git a/src/kern/compile/ASST1/vfscwd.o b/src/kern/compile/ASST1/vfscwd.o
new file mode 100644
index 0000000..37629ca
Binary files /dev/null and b/src/kern/compile/ASST1/vfscwd.o differ
diff --git a/src/kern/compile/ASST1/vfslist.o b/src/kern/compile/ASST1/vfslist.o
new file mode 100644
index 0000000..ce532b1
Binary files /dev/null and b/src/kern/compile/ASST1/vfslist.o differ
diff --git a/src/kern/compile/ASST1/vfslookup.o b/src/kern/compile/ASST1/vfslookup.o
new file mode 100644
index 0000000..543e341
Binary files /dev/null and b/src/kern/compile/ASST1/vfslookup.o differ
diff --git a/src/kern/compile/ASST1/vfspath.o b/src/kern/compile/ASST1/vfspath.o
new file mode 100644
index 0000000..00d0fdd
Binary files /dev/null and b/src/kern/compile/ASST1/vfspath.o differ
diff --git a/src/kern/compile/ASST1/vnode.o b/src/kern/compile/ASST1/vnode.o
new file mode 100644
index 0000000..dbc53a3
Binary files /dev/null and b/src/kern/compile/ASST1/vnode.o differ
diff --git a/src/kern/conf/conf.kern b/src/kern/conf/conf.kern
index 0ad0521..7d7d9c9 100644
--- a/src/kern/conf/conf.kern
+++ b/src/kern/conf/conf.kern
@@ -372,7 +372,6 @@ file      thread/thread.c
 
 file      main/main.c
 file      main/menu.c
-file      main/hello.c
 
 #
 # User-level programming/system call support
diff --git a/src/kern/include/.queue.h.swp b/src/kern/include/.queue.h.swp
new file mode 100644
index 0000000..e6eb5a8
Binary files /dev/null and b/src/kern/include/.queue.h.swp differ
diff --git a/src/kern/include/.synch.h.swp b/src/kern/include/.synch.h.swp
new file mode 100644
index 0000000..67849c1
Binary files /dev/null and b/src/kern/include/.synch.h.swp differ
diff --git a/src/kern/include/lib.h b/src/kern/include/lib.h
index f108f14..34244ff 100644
--- a/src/kern/include/lib.h
+++ b/src/kern/include/lib.h
@@ -105,7 +105,7 @@ char *kstrdup(const char *);
 char *strchr(const char *, int);
 char *strrchr(const char *, int);
 char *strtok_r(char *buf, const char *seps, char **context);
-DEBUG("C string debug");
+
 void *memcpy(void *, const void *, size_t);
 void *memmove(void *, const void *, size_t);
 void bzero(void *, size_t);
@@ -115,13 +115,13 @@ int snprintf(char *buf, size_t maxlen, const char *fmt, ...) __PF(3,4);
 
 const char *strerror(int errcode);
 
-DEBUG("SET / JUMP functionality");
 /*
  * setjmp/longjmp functionality.
  */
 
 int setjmp(jmp_buf jb);
 void longjmp(jmp_buf jb, int retval);
+
 /*
  * Low-level console access.
  */
@@ -129,7 +129,6 @@ void putch(int ch);
 int getch(void);
 void beep(void);
 
-DEBUG("Higher-level consoile output debug");
 /*
  * Higher-level console output.
  *
@@ -147,7 +146,7 @@ void panic(const char *fmt, ...) __PF(1,2);
 void kgets(char *buf, size_t maxbuflen);
 
 void kprintf_bootstrap(void);
-DEBUG("BYTE SWAP DEBUG");
+
 /*
  * Byte swap functions for the kernel.
  */
@@ -186,15 +185,12 @@ u_int64_t htonll(u_int64_t);
  *
  * These functions are machine-dependent.
  */
-DEBUG("copyin debug"); 
+ 
 int copyin(const_userptr_t usersrc, void *dest, size_t len);
-DEBUG("copyout debug");
 int copyout(const void *src, userptr_t userdest, size_t len);
-DEBUG("copyinstr debug");
 int copyinstr(const_userptr_t usersrc, char *dest, size_t len, size_t *got);
-DEBUG("copyoutstr debug");
 int copyoutstr(const char *src, userptr_t userdest, size_t len, size_t *got);
-DEBUG("simpletiming hooks debug");
+
 /*
  * Simple timing hooks.
  *
@@ -205,7 +201,7 @@ DEBUG("simpletiming hooks debug");
  */
 extern int lbolt;
 void clocksleep(int seconds);
-DEBUG("other miscellaneous stuff debug");
+
 /*
  * Other miscellaneous stuff
  */
diff --git a/src/kern/include/synch.h b/src/kern/include/synch.h
index 3583e78..8305452 100644
--- a/src/kern/include/synch.h
+++ b/src/kern/include/synch.h
@@ -50,6 +50,8 @@ void              sem_destroy(struct semaphore *);
 
 struct lock {
 	char *name;
+	int value;
+	struct thread *lockOwner;
 	// add what you need here
 	// (don't forget to mark things volatile as needed)
 };
diff --git a/src/kern/main/hello.c b/src/kern/main/hello.c
deleted file mode 100644
index 2d35c83..0000000
--- a/src/kern/main/hello.c
+++ /dev/null
@@ -1,10 +0,0 @@
-//Phillip Robertson & Grace Tang
-//Comp 3500 - Xiao Qin 
-//hello.c
-// References: C STD LIBRARY - http://en.wikipedia.org/wiki/C_standard_library
-
-
-void hello(){
-	kprintf("Hello World\n");
-
-}
diff --git a/src/kern/main/main.c b/src/kern/main/main.c
index c042284..4b086f1 100644
--- a/src/kern/main/main.c
+++ b/src/kern/main/main.c
@@ -1,6 +1,7 @@
 /*
  * Main.
  */
+
 #include <types.h>
 #include <kern/errno.h>
 #include <kern/unistd.h>
@@ -17,11 +18,6 @@
 #include <version.h>
 
 /*
- * Phillip Robertson & Grace Wang
-*/
-
-
-/*
  * These two pieces of data are maintained by the makefiles and build system.
  * buildconfig is the name of the config file the kernel was configured with.
  * buildversion starts at 1 and is incremented every time you link a kernel. 
@@ -163,7 +159,8 @@ int
 kmain(char *arguments)
 {
 	boot();
-	hello();
+	char ** args;
+	int nargs;
 	menu(arguments);
 
 	/* Should not get here */
diff --git a/src/kern/test/.synchtest.c.swo b/src/kern/test/.synchtest.c.swo
new file mode 100644
index 0000000..7f80643
Binary files /dev/null and b/src/kern/test/.synchtest.c.swo differ
diff --git a/src/kern/thread/.thread.c.swp b/src/kern/thread/.thread.c.swp
new file mode 100644
index 0000000..88c550b
Binary files /dev/null and b/src/kern/thread/.thread.c.swp differ
diff --git a/src/kern/thread/synch.c b/src/kern/thread/synch.c
index cdc47a3..06da0e7 100644
--- a/src/kern/thread/synch.c
+++ b/src/kern/thread/synch.c
@@ -112,8 +112,8 @@ lock_create(const char *name)
 		return NULL;
 	}
 	
-	// add stuff here as needed
-	
+  lock->value = 0;
+  lock->lockOwner = NULL;
 	return lock;
 }
 
@@ -122,36 +122,51 @@ lock_destroy(struct lock *lock)
 {
 	assert(lock != NULL);
 
-	// add stuff here as needed
-	
-	kfree(lock->name);
+	kfree(lock->value);
 	kfree(lock);
 }
 
 void
 lock_acquire(struct lock *lock)
 {
-	// Write this
+  int spl;
+  assert(lock != NULL);
+	assert(in_interrupt==0);
 
-	(void)lock;  // suppress warning until code gets written
+  spl = splhigh();
+  assert(!lock_do_i_hold(lock)); 
+  while (lock->value) {
+    thread_sleep(lock);
+  }
+  lock->lockOwner = curthread;
+  lock->value = 1;
+  splx(spl);
 }
 
 void
 lock_release(struct lock *lock)
 {
-	// Write this
-
-	(void)lock;  // suppress warning until code gets written
+  assert(lock != NULL);
+  assert(lock->value);
+  assert(lock_do_i_hold(lock));
+
+  int spl;
+  spl = splhigh();
+  lock->value = 0;
+  lock->lockOwner = NULL;
+  thread_wakeup(lock);
+  splx(spl);
 }
 
 int
 lock_do_i_hold(struct lock *lock)
 {
-	// Write this
+  assert(lock != NULL);
 
-	(void)lock;  // suppress warning until code gets written
+  if (!lock->value) return 0;
 
-	return 1;    // dummy until code gets written
+  if (lock->lockOwner == curthread) return 1;
+  else return 0;
 }
 
 ////////////////////////////////////////////////////////////
@@ -175,8 +190,6 @@ cv_create(const char *name)
 		return NULL;
 	}
 	
-	// add stuff here as needed
-	
 	return cv;
 }
 
@@ -185,8 +198,6 @@ cv_destroy(struct cv *cv)
 {
 	assert(cv != NULL);
 
-	// add stuff here as needed
-	
 	kfree(cv->name);
 	kfree(cv);
 }
@@ -194,23 +205,27 @@ cv_destroy(struct cv *cv)
 void
 cv_wait(struct cv *cv, struct lock *lock)
 {
-	// Write this
-	(void)cv;    // suppress warning until code gets written
-	(void)lock;  // suppress warning until code gets written
+  int spl;
+
+  lock_release(lock);
+  spl = splhigh();
+  thread_sleep(cv);
+  splx(spl);
+  lock_acquire(lock);
 }
 
 void
 cv_signal(struct cv *cv, struct lock *lock)
 {
-	// Write this
-	(void)cv;    // suppress warning until code gets written
-	(void)lock;  // suppress warning until code gets written
+  int spl = splhigh();
+  thread_wakeup(cv);
+  splx(spl);
 }
 
 void
 cv_broadcast(struct cv *cv, struct lock *lock)
 {
-	// Write this
-	(void)cv;    // suppress warning until code gets written
-	(void)lock;  // suppress warning until code gets written
-}
+  int spl = splhigh();
+  thread_wakeup(cv);
+  splx(spl);
+}
\ No newline at end of file
